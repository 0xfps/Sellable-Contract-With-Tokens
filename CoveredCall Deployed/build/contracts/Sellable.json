{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "MoveOwnership",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bidContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "__token",
          "type": "address"
        }
      ],
      "name": "canDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destructTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_contract_owner",
          "type": "address"
        }
      ],
      "name": "moveOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "placeOnSaleInGwei",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
    "1": "contracts/Covered.sol",
    "2": "contracts/Deps/Owned.sol"
  },
  "ast": {
    "absolutePath": "contracts/Covered.sol",
    "exportedSymbols": {
      "IERC20": [
        1562
      ],
      "Owned": [
        482
      ],
      "Sellable": [
        413
      ]
    },
    "id": 414,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 1563,
        "src": "57:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Deps/Owned.sol",
        "file": "./Deps/Owned.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 483,
        "src": "142:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 482,
              "src": "789:5:1"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "789:5:1"
          }
        ],
        "canonicalName": "Sellable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 413,
        "linearizedBaseContracts": [
          413,
          482
        ],
        "name": "Sellable",
        "nameLocation": "777:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "on_sale",
            "nameLocation": "901:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "888:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "888:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "911:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "highest_bid",
            "nameLocation": "981:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "965:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "965:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "highest_bidder",
            "nameLocation": "1014:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "998:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "998:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "contract_price",
            "nameLocation": "1051:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "1035:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1035:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "stored_contract_tokens",
            "nameLocation": "1087:22:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "1071:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1071:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1123:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "1116:12:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1562",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1562,
                "src": "1116:6:1"
              },
              "referencedDeclaration": 1562,
              "src": "1116:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1562",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1592:173:1",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "is_empty",
                      "nameLocation": "1607:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1602:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1602:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "1627:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1562",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1562",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1619:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1619:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1645:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1637:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1637:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1637:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1619:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 38,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1618:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1602:46:1"
                },
                {
                  "assignments": [
                    41
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41,
                      "mutability": "mutable",
                      "name": "is_same_token",
                      "nameLocation": "1663:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1658:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1658:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$1562",
                          "typeString": "contract IERC20"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1680:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 44,
                              "name": "__token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "1696:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1562",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1562",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 43,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "1689:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1562_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "1680:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 47,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1679:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1658:47:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49,
                          "name": "is_empty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1732:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 50,
                          "name": "is_same_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1744:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1732:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 52,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1731:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26,
                  "id": 53,
                  "nodeType": "Return",
                  "src": "1724:34:1"
                }
              ]
            },
            "functionSelector": "4bf0d331",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canDeposit",
            "nameLocation": "1535:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "__token",
                  "nameLocation": "1553:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1546:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1562",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 21,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1562,
                      "src": "1546:6:1"
                    },
                    "referencedDeclaration": 1562,
                    "src": "1546:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1562",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:16:1"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1582:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:6:1"
            },
            "scope": 413,
            "src": "1526:239:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2368:563:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2386:8:1",
                        "subExpression": {
                          "id": 65,
                          "name": "on_sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "2387:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973206f6e2073616c65",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44e31dbd8bc67c1a8b0834305b424cacd80765a3ff098fc1c0f31b777f5a2a0",
                          "typeString": "literal_string \"Contract is on sale\""
                        },
                        "value": "Contract is on sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44e31dbd8bc67c1a8b0834305b424cacd80765a3ff098fc1c0f31b777f5a2a0",
                          "typeString": "literal_string \"Contract is on sale\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2378:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:40:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "2436:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2454:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2446:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 72,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2446:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2436:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20746f6b656e2061646472657373",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2458:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d698d803dffc996205aea8e48e6bf781279b7492b3e4ce5b72799a6dd8898da0",
                          "typeString": "literal_string \"Zero token address\""
                        },
                        "value": "Zero token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d698d803dffc996205aea8e48e6bf781279b7492b3e4ce5b72799a6dd8898da0",
                          "typeString": "literal_string \"Zero token address\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2428:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 83,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "2515:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 82,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "2508:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1562_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2508:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1562",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1562",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 81,
                          "name": "canDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "2497:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1562_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742068617665203220646966666572656e7420746f6b656e7320696e207468697320636f6e74726163742c205769746864726177206578697374696e6720746f6b656e732e",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:80:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e8b42436308e5479b0a81831e4460a6b089edb2cf56f0c2ab6a31a548fbc878",
                          "typeString": "literal_string \"You cannot have 2 different tokens in this contract, Withdraw existing tokens.\""
                        },
                        "value": "You cannot have 2 different tokens in this contract, Withdraw existing tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e8b42436308e5479b0a81831e4460a6b089edb2cf56f0c2ab6a31a548fbc878",
                          "typeString": "literal_string \"You cannot have 2 different tokens in this contract, Withdraw existing tokens.\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2489:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:117:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:117:1"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2617:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1562",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 91,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "2632:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 90,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2625:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1562_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2625:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1562",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2617:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1562",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 98,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2735:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2735:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 102,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2755:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Sellable_$413",
                                    "typeString": "contract Sellable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Sellable_$413",
                                    "typeString": "contract Sellable"
                                  }
                                ],
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2747:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2747:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2747:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 96,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2719:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1562",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1539,
                            "src": "2719:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2719:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 105,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "2765:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2719:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820616c6c6f77616e636520746f6b656e732e",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11b0521147442cd69f29ac6b3755c896812fb95f98f14f51c202b12db6120273",
                          "typeString": "literal_string \"You don't have enough allowance tokens.\""
                        },
                        "value": "You don't have enough allowance tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11b0521147442cd69f29ac6b3755c896812fb95f98f14f51c202b12db6120273",
                          "typeString": "literal_string \"You don't have enough allowance tokens.\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2711:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:105:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2845:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2845:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 117,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2865:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Sellable_$413",
                              "typeString": "contract Sellable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Sellable_$413",
                              "typeString": "contract Sellable"
                            }
                          ],
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2857:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2857:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 119,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2872:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 110,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2826:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1562",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "2826:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2826:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:54:1"
                },
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "stored_contract_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2891:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2917:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2891:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:33:1"
                }
              ]
            },
            "functionSelector": "66168bd7",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "2356:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2356:7:1"
              }
            ],
            "name": "depositTokens",
            "nameLocation": "2302:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2324:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2316:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2340:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2332:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2315:33:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:1"
            },
            "scope": 413,
            "src": "2293:638:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "3422:367:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3440:8:1",
                        "subExpression": {
                          "id": 135,
                          "name": "on_sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3441:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420697320666f722073616c6520617420746865206d6f6d656e742e",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24f85041620932912bd3dd1a79d4e3815d9d11711318e7f2fae2e869e127437b",
                          "typeString": "literal_string \"Contract is for sale at the moment.\""
                        },
                        "value": "Contract is for sale at the moment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24f85041620932912bd3dd1a79d4e3815d9d11711318e7f2fae2e869e127437b",
                          "typeString": "literal_string \"Contract is for sale at the moment.\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3432:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3432:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "stored_contract_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3557:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3583:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "3557:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206d7573742062652061206d696e696d756d206f662031303020746f6b656e7320746f206c69737420636f6e7472616374206f6e2073616c652e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3587:65:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17b773dec38b5cb705dd07ad28c07197c09798832f075b539d6ba083abc664a0",
                          "typeString": "literal_string \"There must be a minimum of 100 tokens to list contract on sale.\""
                        },
                        "value": "There must be a minimum of 100 tokens to list contract on sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17b773dec38b5cb705dd07ad28c07197c09798832f075b539d6ba083abc664a0",
                          "typeString": "literal_string \"There must be a minimum of 100 tokens to list contract on sale.\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3549:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:104:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:104:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "3671:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "38",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3682:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          },
                          "value": "8"
                        },
                        "src": "3671:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265203c3d20382065746865722e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3691:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9db39fce3d60ca40745c6f1c0dbe0ea983a3dbf9ffbeb15f07be2ae3f37c2771",
                          "typeString": "literal_string \"Amount must be <= 8 ether.\""
                        },
                        "value": "Amount must be <= 8 ether."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9db39fce3d60ca40745c6f1c0dbe0ea983a3dbf9ffbeb15f07be2ae3f37c2771",
                          "typeString": "literal_string \"Amount must be <= 8 ether.\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3663:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:57:1"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "on_sale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "3730:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3740:8:1",
                      "subExpression": {
                        "id": 155,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3741:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3730:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "3730:18:1"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 159,
                      "name": "contract_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3758:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 160,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "3775:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:24:1"
                }
              ]
            },
            "functionSelector": "11f9cf20",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "3410:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3410:7:1"
              }
            ],
            "name": "placeOnSaleInGwei",
            "nameLocation": "3368:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3394:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3386:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3385:17:1"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:0:1"
            },
            "scope": 413,
            "src": "3359:430:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "4266:736:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 168,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "4284:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973206e6f7420666f722073616c6520617420746865206d6f6d656e742e",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4293:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1eee65a11f762921b44645607316ae4f9a85c7d204aeb8ff827d9fd2d21f8b6",
                          "typeString": "literal_string \"Contract is not for sale at the moment.\""
                        },
                        "value": "Contract is not for sale at the moment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1eee65a11f762921b44645607316ae4f9a85c7d204aeb8ff827d9fd2d21f8b6",
                          "typeString": "literal_string \"Contract is not for sale at the moment.\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4276:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 173,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4400:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4400:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4422:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4414:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4414:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4414:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4400:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54786e2066726f6d203020616464726573732e",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4426:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f0262e4b0e55521822ee130150712d62820566a3caef4c8e6ac0a1e343a7594",
                          "typeString": "literal_string \"Txn from 0 address.\""
                        },
                        "value": "Txn from 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f0262e4b0e55521822ee130150712d62820566a3caef4c8e6ac0a1e343a7594",
                          "typeString": "literal_string \"Txn from 0 address.\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4392:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "4392:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4466:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4466:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 186,
                          "name": "contract_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4480:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4466:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742062696420796f757220636f6e74726163742e",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4496:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68ba277e40ffd7bb4e56f2369b8e5f9efdb9f3acf23f109640555e080c4d87",
                          "typeString": "literal_string \"You cannot bid your contract.\""
                        },
                        "value": "You cannot bid your contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68ba277e40ffd7bb4e56f2369b8e5f9efdb9f3acf23f109640555e080c4d87",
                          "typeString": "literal_string \"You cannot bid your contract.\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4458:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "4458:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4546:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4546:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4558:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4546:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365203c3d2030",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4561:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98f82cabd9d8ccb09721708a90edc4e293adc54409be73fab92f9f319faa6a09",
                          "typeString": "literal_string \"Price <= 0\""
                        },
                        "value": "Price <= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98f82cabd9d8ccb09721708a90edc4e293adc54409be73fab92f9f319faa6a09",
                          "typeString": "literal_string \"Price <= 0\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4538:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4538:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "4538:36:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4592:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4592:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 202,
                          "name": "contract_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "4605:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4592:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426964203c20436f6e74726163742070726963652e",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4621:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30aaae917640ef9f2c3aeb354c9d8b442c24caffeabad81af594ef6a1ab2f12",
                          "typeString": "literal_string \"Bid < Contract price.\""
                        },
                        "value": "Bid < Contract price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e30aaae917640ef9f2c3aeb354c9d8b442c24caffeabad81af594ef6a1ab2f12",
                          "typeString": "literal_string \"Bid < Contract price.\""
                        }
                      ],
                      "id": 199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4584:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 208,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4663:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4663:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 210,
                          "name": "highest_bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "4675:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4663:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7572732069736e27742074686520686967686573742c20697420697320756e61636365707465642e",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4688:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e12cf7253a4bc323e869dd9ea8bd4907f7548d042fce7c166034760a76153edc",
                          "typeString": "literal_string \"Yours isn't the highest, it is unaccepted.\""
                        },
                        "value": "Yours isn't the highest, it is unaccepted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e12cf7253a4bc323e869dd9ea8bd4907f7548d042fce7c166034760a76153edc",
                          "typeString": "literal_string \"Yours isn't the highest, it is unaccepted.\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "4655:78:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 215,
                        "name": "highest_bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "4749:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4763:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4749:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 218,
                        "name": "highest_bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4768:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4794:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4786:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4786:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4786:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4768:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4749:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "nodeType": "IfStatement",
                  "src": "4745:110:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 230,
                          "name": "highest_bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "4843:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 227,
                              "name": "highest_bidder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "4818:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4810:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4810:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4810:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "4810:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4810:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 232,
                    "nodeType": "ExpressionStatement",
                    "src": "4810:45:1"
                  }
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4870:21:1",
                    "subExpression": {
                      "id": 234,
                      "name": "highest_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "4877:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "4870:21:1"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4905:18:1",
                    "subExpression": {
                      "id": 237,
                      "name": "highest_bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "4912:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "4905:18:1"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "highest_bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "4935:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4949:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4949:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4935:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:23:1"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 245,
                      "name": "highest_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "4968:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 246,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4985:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4985:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4968:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:27:1"
                }
              ]
            },
            "functionSelector": "d54e255e",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bidContract",
            "nameLocation": "4233:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:2:1"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4266:0:1"
            },
            "scope": 413,
            "src": "4224:778:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "5219:618:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 257,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "5237:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f6e2073616c65",
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5246:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7f5fc9e154c201d5322e6b163f78f21919312aed81174977d33e96030f1c36d",
                          "typeString": "literal_string \"Not on sale\""
                        },
                        "value": "Not on sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7f5fc9e154c201d5322e6b163f78f21919312aed81174977d33e96030f1c36d",
                          "typeString": "literal_string \"Not on sale\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5229:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 262,
                          "name": "highest_bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "5345:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5359:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5345:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2062696473207965742e",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5362:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e946baa73927ec1f3de9a4066b5263826f963c76a66ba30135e74f71b46bd011",
                          "typeString": "literal_string \"No bids yet.\""
                        },
                        "value": "No bids yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e946baa73927ec1f3de9a4066b5263826f963c76a66ba30135e74f71b46bd011",
                          "typeString": "literal_string \"No bids yet.\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5337:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "5337:40:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 269,
                          "name": "highest_bidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5395:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5421:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5413:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 270,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5413:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5413:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5395:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20626964646572207965742e",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5425:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f06ca1fdfd3fea260d63260c5a08c0938e9895c19ab93165cd16a6dffcc7ef",
                          "typeString": "literal_string \"No bidder yet.\""
                        },
                        "value": "No bidder yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f06ca1fdfd3fea260d63260c5a08c0938e9895c19ab93165cd16a6dffcc7ef",
                          "typeString": "literal_string \"No bidder yet.\""
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5387:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5387:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "5387:55:1"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "old_contract_owner",
                      "nameLocation": "5461:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 310,
                      "src": "5453:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5453:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "id": 280,
                    "name": "contract_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 417,
                    "src": "5482:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5453:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "name": "highest_bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "5540:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 284,
                            "name": "contract_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "5515:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5507:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 282,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5507:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5507:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5507:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "highest_bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "5576:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 290,
                      "name": "moveOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "5562:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5562:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "5562:29:1"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5602:21:1",
                    "subExpression": {
                      "id": 294,
                      "name": "highest_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "5609:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5602:21:1"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5633:18:1",
                    "subExpression": {
                      "id": 297,
                      "name": "highest_bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "5640:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:18:1"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "on_sale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "5670:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5680:8:1",
                      "subExpression": {
                        "id": 301,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "5681:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5670:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "old_contract_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5795:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 307,
                        "name": "contract_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "5815:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 305,
                      "name": "MoveOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "5781:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5781:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "EmitStatement",
                  "src": "5776:54:1"
                }
              ]
            },
            "functionSelector": "c3d22fb6",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "5207:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5207:7:1"
              }
            ],
            "name": "sellContract",
            "nameLocation": "5185:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5197:2:1"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5219:0:1"
            },
            "scope": 413,
            "src": "5176:661:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "5982:267:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 317,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "6000:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f74206f6e2073616c652e",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6009:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bf292e1444b76321fd2717a5cc1135256177bf587f82007c81d11a49ff02e19",
                          "typeString": "literal_string \"Contract not on sale.\""
                        },
                        "value": "Contract not on sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bf292e1444b76321fd2717a5cc1135256177bf587f82007c81d11a49ff02e19",
                          "typeString": "literal_string \"Contract not on sale.\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5992:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5992:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "5992:41:1"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 321,
                      "name": "on_sale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "6043:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6053:8:1",
                      "subExpression": {
                        "id": 322,
                        "name": "on_sale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "6054:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6043:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6043:18:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 326,
                        "name": "highest_bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "6076:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6090:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6076:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 329,
                        "name": "highest_bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "6095:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6121:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6113:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6113:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6113:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6095:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6076:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "6072:110:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 341,
                          "name": "highest_bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "6170:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 338,
                              "name": "highest_bidder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "6145:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6137:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 336,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6137:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6137:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "6137:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6137:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 343,
                    "nodeType": "ExpressionStatement",
                    "src": "6137:45:1"
                  }
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6193:21:1",
                    "subExpression": {
                      "id": 345,
                      "name": "highest_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "6200:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "6193:21:1"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6224:18:1",
                    "subExpression": {
                      "id": 348,
                      "name": "highest_bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "6231:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "6224:18:1"
                }
              ]
            },
            "functionSelector": "fe741fad",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 313,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "5970:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5970:7:1"
              }
            ],
            "name": "revokeSale",
            "nameLocation": "5950:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5960:2:1"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5982:0:1"
            },
            "scope": 413,
            "src": "5941:308:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "6515:225:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6533:8:1",
                        "subExpression": {
                          "id": 358,
                          "name": "on_sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "6534:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973206f6e2073616c652e",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6543:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c295fa2000568d38f0032d5f7d81f2654fdd35db4fd5de60066fb1c90bf823",
                          "typeString": "literal_string \"Contract is on sale.\""
                        },
                        "value": "Contract is on sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c295fa2000568d38f0032d5f7d81f2654fdd35db4fd5de60066fb1c90bf823",
                          "typeString": "literal_string \"Contract is on sale.\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6525:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6525:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "6525:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 364,
                          "name": "stored_contract_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "6584:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6609:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6584:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e747261637420686173206e6f2073746f72656420746f6b656e73",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6612:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bed01d92200c2904bd99a1929a024105f73bfec2957ae6ed78e9cbd9189b1acb",
                          "typeString": "literal_string \"This contract has no stored tokens\""
                        },
                        "value": "This contract has no stored tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bed01d92200c2904bd99a1929a024105f73bfec2957ae6ed78e9cbd9189b1acb",
                          "typeString": "literal_string \"This contract has no stored tokens\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6576:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6576:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "6576:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6675:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6675:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "stored_contract_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "6687:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 370,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "6660:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1562",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1529,
                      "src": "6660:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6660:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:50:1"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6721:12:1",
                    "subExpression": {
                      "id": 378,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "6728:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1562",
                        "typeString": "contract IERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "6721:12:1"
                }
              ]
            },
            "functionSelector": "8d8f2adb",
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 354,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "6503:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6503:7:1"
              }
            ],
            "name": "withdrawTokens",
            "nameLocation": "6479:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6493:2:1"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6515:0:1"
            },
            "scope": 413,
            "src": "6470:270:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "6941:229:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6959:8:1",
                        "subExpression": {
                          "id": 388,
                          "name": "on_sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "6960:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206f6e2073616c65",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6969:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eea8962c40825296bc331bc1e69944be8e2321c43382ddcf47a2700cbfec339d",
                          "typeString": "literal_string \"Contract on sale\""
                        },
                        "value": "Contract on sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eea8962c40825296bc331bc1e69944be8e2321c43382ddcf47a2700cbfec339d",
                          "typeString": "literal_string \"Contract on sale\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6951:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6951:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "6951:37:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 394,
                          "name": "stored_contract_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "7006:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7031:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7006:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e747261637420686173206e6f2073746f72656420746f6b656e73",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7034:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bed01d92200c2904bd99a1929a024105f73bfec2957ae6ed78e9cbd9189b1acb",
                          "typeString": "literal_string \"This contract has no stored tokens\""
                        },
                        "value": "This contract has no stored tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bed01d92200c2904bd99a1929a024105f73bfec2957ae6ed78e9cbd9189b1acb",
                          "typeString": "literal_string \"This contract has no stored tokens\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6998:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6998:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "6998:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 403,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7105:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7105:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 405,
                        "name": "stored_contract_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "7117:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 400,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "7090:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1562",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1529,
                      "src": "7090:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7090:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "7090:50:1"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7151:12:1",
                    "subExpression": {
                      "id": 408,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "7158:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1562",
                        "typeString": "contract IERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "7151:12:1"
                }
              ]
            },
            "functionSelector": "046c8a29",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 453,
                  "src": "6929:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6929:7:1"
              }
            ],
            "name": "destructTokens",
            "nameLocation": "6905:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6919:2:1"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6941:0:1"
            },
            "scope": 413,
            "src": "6896:274:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 414,
        "src": "768:6404:1",
        "usedErrors": []
      }
    ],
    "src": "32:7140:1"
  },
  "bytecode": "60806040526000805460ff60a01b1916905534801561001d57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527ff25e5c775abc4fde8672e6c495f9a9f0fe279bc7640d95896b49dad0fb4e6d68910160405180910390a1610f218061007b6000396000f3fe6080604052600436106100865760003560e01c806379ff433d1161005957806379ff433d146101165780638d8f2adb14610136578063c3d22fb61461014b578063d54e255e14610160578063fe741fad1461016857600080fd5b8063046c8a291461008b57806311f9cf20146100a25780634bf0d331146100c257806366168bd7146100f6575b600080fd5b34801561009757600080fd5b506100a061017d565b005b3480156100ae57600080fd5b506100a06100bd366004610de9565b6102e6565b3480156100ce57600080fd5b506100e26100dd366004610e1a565b61046b565b604051901515815260200160405180910390f35b34801561010257600080fd5b506100a0610111366004610e3e565b610493565b34801561012257600080fd5b506100a0610131366004610e1a565b610763565b34801561014257600080fd5b506100a061082b565b34801561015757600080fd5b506100a06108a6565b6100a0610a71565b34801561017457600080fd5b506100a0610cda565b6000546001600160a01b031633146101b05760405162461bcd60e51b81526004016101a790610e6a565b60405180910390fd5b600054600160a01b900460ff16156101fd5760405162461bcd60e51b815260206004820152601060248201526f436f6e7472616374206f6e2073616c6560801b60448201526064016101a7565b60006004541161025a5760405162461bcd60e51b815260206004820152602260248201527f5468697320636f6e747261637420686173206e6f2073746f72656420746f6b656044820152616e7360f01b60648201526084016101a7565b6005546004805460405163a9059cbb60e01b8152339281019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610e8a565b50600580546001600160a01b0319169055565b6000546001600160a01b031633146103105760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16156103765760405162461bcd60e51b815260206004820152602360248201527f436f6e747261637420697320666f722073616c6520617420746865206d6f6d65604482015262373a1760e91b60648201526084016101a7565b603260045410156103ef5760405162461bcd60e51b815260206004820152603f60248201527f5468657265206d7573742062652061206d696e696d756d206f6620313030207460448201527f6f6b656e7320746f206c69737420636f6e7472616374206f6e2073616c652e0060648201526084016101a7565b676f05b59d3b2000008111156104475760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265203c3d20382065746865722e00000000000060448201526064016101a7565b6000805460ff60a01b198116600160a01b9182900460ff1615909102179055600355565b6005546000906001600160a01b03908116801591841614818061048b5750805b949350505050565b6000546001600160a01b031633146104bd5760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff161561050d5760405162461bcd60e51b8152602060048201526013602482015272436f6e7472616374206973206f6e2073616c6560681b60448201526064016101a7565b6001600160a01b0382166105585760405162461bcd60e51b81526020600482015260126024820152715a65726f20746f6b656e206164647265737360701b60448201526064016101a7565b6105618261046b565b6105ea5760405162461bcd60e51b815260206004820152604e60248201527f596f752063616e6e6f742068617665203220646966666572656e7420746f6b6560448201527f6e7320696e207468697320636f6e74726163742c20576974686472617720657860648201526d34b9ba34b733903a37b5b2b7399760911b608482015260a4016101a7565b600580546001600160a01b0319166001600160a01b038416908117909155604051636eb1769f60e11b815233600482015230602482015282919063dd62ed3e90604401602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610eac565b10156106cc5760405162461bcd60e51b815260206004820152602760248201527f596f7520646f6e2774206861766520656e6f75676820616c6c6f77616e6365206044820152663a37b5b2b7399760c91b60648201526084016101a7565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610e8a565b50806004600082825461075a9190610ec5565b90915550505050565b6000546001600160a01b0316331461078d5760405162461bcd60e51b81526004016101a790610e6a565b6001600160a01b0381166107cf5760405162461bcd60e51b815260206004820152600960248201526830204164647265737360b81b60448201526064016101a7565b600080546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527ff25e5c775abc4fde8672e6c495f9a9f0fe279bc7640d95896b49dad0fb4e6d6891015b60405180910390a150565b6000546001600160a01b031633146108555760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16156101fd5760405162461bcd60e51b815260206004820152601460248201527321b7b73a3930b1ba1034b99037b71039b0b6329760611b60448201526064016101a7565b6000546001600160a01b031633146108d05760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff166109175760405162461bcd60e51b815260206004820152600b60248201526a4e6f74206f6e2073616c6560a81b60448201526064016101a7565b6000600154116109585760405162461bcd60e51b815260206004820152600c60248201526b2737903134b239903cb2ba1760a11b60448201526064016101a7565b6002546001600160a01b03166109a15760405162461bcd60e51b815260206004820152600e60248201526d2737903134b23232b9103cb2ba1760911b60448201526064016101a7565b600080546001546040516001600160a01b0390921692839282156108fc029291818181858888f193505050501580156109de573d6000803e3d6000fd5b506002546109f4906001600160a01b0316610763565b600280546001600160a01b031916905560006001819055805460ff60a01b198116600160a01b80830460ff161502908117909255604080516001600160a01b038086168252928316929093169190911760208301527ff25e5c775abc4fde8672e6c495f9a9f0fe279bc7640d95896b49dad0fb4e6d689101610820565b600054600160a01b900460ff16610ada5760405162461bcd60e51b815260206004820152602760248201527f436f6e7472616374206973206e6f7420666f722073616c65206174207468652060448201526636b7b6b2b73a1760c91b60648201526084016101a7565b33610b1d5760405162461bcd60e51b81526020600482015260136024820152722a3c3710333937b690181030b2323932b9b99760691b60448201526064016101a7565b6000546001600160a01b0316331415610b785760405162461bcd60e51b815260206004820152601d60248201527f596f752063616e6e6f742062696420796f757220636f6e74726163742e00000060448201526064016101a7565b60003411610bb55760405162461bcd60e51b815260206004820152600a60248201526905072696365203c3d20360b41b60448201526064016101a7565b600354341015610bff5760405162461bcd60e51b81526020600482015260156024820152742134b2101e1021b7b73a3930b1ba10383934b1b29760591b60448201526064016101a7565b6001543411610c635760405162461bcd60e51b815260206004820152602a60248201527f596f7572732069736e27742074686520686967686573742c20697420697320756044820152693730b1b1b2b83a32b21760b11b60648201526084016101a7565b6000600154118015610c7f57506002546001600160a01b031615155b15610cc2576002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610cc0573d6000803e3d6000fd5b505b60028054346001556001600160a01b03191633179055565b6000546001600160a01b03163314610d045760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16610d555760405162461bcd60e51b815260206004820152601560248201527421b7b73a3930b1ba103737ba1037b71039b0b6329760591b60448201526064016101a7565b6000805460ff60a01b198116600160a01b9182900460ff161590910217905560015415801590610d8f57506002546001600160a01b031615155b15610dd2576002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610dd0573d6000803e3d6000fd5b505b600280546001600160a01b03191690556000600155565b600060208284031215610dfb57600080fd5b5035919050565b6001600160a01b0381168114610e1757600080fd5b50565b600060208284031215610e2c57600080fd5b8135610e3781610e02565b9392505050565b60008060408385031215610e5157600080fd5b8235610e5c81610e02565b946020939093013593505050565b60208082526006908201526510a7bbb732b960d11b604082015260600190565b600060208284031215610e9c57600080fd5b81518015158114610e3757600080fd5b600060208284031215610ebe57600080fd5b5051919050565b60008219821115610ee657634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fb343882bbf39d706bf5001a37b82948d5b551ca210811e1085ff9ba3afff4ee64736f6c634300080c0033",
  "bytecodeSha1": "38f1280d315452c1adf5093513183fc765d09d4a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Sellable",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Sellable.bidContract": {
          "57": [
            4284,
            4291,
            true
          ],
          "58": [
            4466,
            4494,
            true
          ],
          "59": [
            4546,
            4559,
            true
          ],
          "60": [
            4592,
            4619,
            true
          ],
          "61": [
            4663,
            4686,
            true
          ],
          "62": [
            4749,
            4764,
            false
          ],
          "63": [
            4768,
            4796,
            false
          ]
        },
        "Sellable.depositTokens": {
          "50": [
            2386,
            2394,
            true
          ],
          "51": [
            2436,
            2456,
            true
          ],
          "52": [
            2497,
            2523,
            true
          ],
          "53": [
            2719,
            2772,
            true
          ]
        },
        "Sellable.destructTokens": {
          "45": [
            6959,
            6967,
            true
          ],
          "46": [
            7006,
            7032,
            true
          ]
        },
        "Sellable.placeOnSaleInGwei": {
          "47": [
            3440,
            3448,
            true
          ],
          "48": [
            3557,
            3585,
            true
          ],
          "49": [
            3671,
            3689,
            true
          ]
        },
        "Sellable.revokeSale": {
          "64": [
            6000,
            6007,
            true
          ],
          "65": [
            6076,
            6091,
            false
          ],
          "66": [
            6095,
            6123,
            false
          ]
        },
        "Sellable.sellContract": {
          "55": [
            5237,
            5244,
            true
          ],
          "56": [
            5345,
            5360,
            true
          ]
        },
        "Sellable.withdrawTokens": {
          "54": [
            6533,
            6541,
            true
          ]
        }
      },
      "2": {
        "Owned.moveOwnership": {
          "67": [
            940,
            972,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "Sellable.bidContract": {
          "30": [
            4276,
            4335
          ],
          "31": [
            4392,
            4448
          ],
          "32": [
            4458,
            4528
          ],
          "33": [
            4538,
            4574
          ],
          "34": [
            4584,
            4645
          ],
          "35": [
            4655,
            4733
          ],
          "36": [
            4810,
            4855
          ],
          "37": [
            4870,
            4891
          ],
          "38": [
            4935,
            4958
          ],
          "39": [
            4968,
            4995
          ]
        },
        "Sellable.canDeposit": {
          "9": [
            1724,
            1758
          ]
        },
        "Sellable.depositTokens": {
          "10": [
            2378,
            2418
          ],
          "11": [
            2428,
            2479
          ],
          "12": [
            2489,
            2606
          ],
          "13": [
            2617,
            2639
          ],
          "14": [
            2711,
            2816
          ],
          "15": [
            2826,
            2880
          ],
          "16": [
            2891,
            2924
          ]
        },
        "Sellable.destructTokens": {
          "0": [
            6951,
            6988
          ],
          "1": [
            6998,
            7071
          ],
          "2": [
            7090,
            7140
          ],
          "3": [
            7151,
            7163
          ]
        },
        "Sellable.placeOnSaleInGwei": {
          "4": [
            3432,
            3488
          ],
          "5": [
            3549,
            3653
          ],
          "6": [
            3663,
            3720
          ],
          "7": [
            3730,
            3748
          ],
          "8": [
            3758,
            3782
          ]
        },
        "Sellable.revokeSale": {
          "40": [
            5992,
            6033
          ],
          "41": [
            6043,
            6061
          ],
          "42": [
            6137,
            6182
          ],
          "43": [
            6193,
            6214
          ],
          "44": [
            6224,
            6242
          ]
        },
        "Sellable.sellContract": {
          "21": [
            5229,
            5260
          ],
          "22": [
            5337,
            5377
          ],
          "23": [
            5387,
            5442
          ],
          "24": [
            5507,
            5552
          ],
          "25": [
            5562,
            5591
          ],
          "26": [
            5602,
            5623
          ],
          "27": [
            5633,
            5651
          ],
          "28": [
            5670,
            5688
          ],
          "29": [
            5776,
            5830
          ]
        },
        "Sellable.withdrawTokens": {
          "20": [
            6525,
            6566
          ]
        }
      },
      "2": {
        "Owned.moveOwnership": {
          "17": [
            932,
            986
          ],
          "18": [
            996,
            1031
          ],
          "19": [
            1041,
            1091
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20",
    "Owned"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c806379ff433d1161005957806379ff433d146101165780638d8f2adb14610136578063c3d22fb61461014b578063d54e255e14610160578063fe741fad1461016857600080fd5b8063046c8a291461008b57806311f9cf20146100a25780634bf0d331146100c257806366168bd7146100f6575b600080fd5b34801561009757600080fd5b506100a061017d565b005b3480156100ae57600080fd5b506100a06100bd366004610de9565b6102e6565b3480156100ce57600080fd5b506100e26100dd366004610e1a565b61046b565b604051901515815260200160405180910390f35b34801561010257600080fd5b506100a0610111366004610e3e565b610493565b34801561012257600080fd5b506100a0610131366004610e1a565b610763565b34801561014257600080fd5b506100a061082b565b34801561015757600080fd5b506100a06108a6565b6100a0610a71565b34801561017457600080fd5b506100a0610cda565b6000546001600160a01b031633146101b05760405162461bcd60e51b81526004016101a790610e6a565b60405180910390fd5b600054600160a01b900460ff16156101fd5760405162461bcd60e51b815260206004820152601060248201526f436f6e7472616374206f6e2073616c6560801b60448201526064016101a7565b60006004541161025a5760405162461bcd60e51b815260206004820152602260248201527f5468697320636f6e747261637420686173206e6f2073746f72656420746f6b656044820152616e7360f01b60648201526084016101a7565b6005546004805460405163a9059cbb60e01b8152339281019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610e8a565b50600580546001600160a01b0319169055565b6000546001600160a01b031633146103105760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16156103765760405162461bcd60e51b815260206004820152602360248201527f436f6e747261637420697320666f722073616c6520617420746865206d6f6d65604482015262373a1760e91b60648201526084016101a7565b603260045410156103ef5760405162461bcd60e51b815260206004820152603f60248201527f5468657265206d7573742062652061206d696e696d756d206f6620313030207460448201527f6f6b656e7320746f206c69737420636f6e7472616374206f6e2073616c652e0060648201526084016101a7565b676f05b59d3b2000008111156104475760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265203c3d20382065746865722e00000000000060448201526064016101a7565b6000805460ff60a01b198116600160a01b9182900460ff1615909102179055600355565b6005546000906001600160a01b03908116801591841614818061048b5750805b949350505050565b6000546001600160a01b031633146104bd5760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff161561050d5760405162461bcd60e51b8152602060048201526013602482015272436f6e7472616374206973206f6e2073616c6560681b60448201526064016101a7565b6001600160a01b0382166105585760405162461bcd60e51b81526020600482015260126024820152715a65726f20746f6b656e206164647265737360701b60448201526064016101a7565b6105618261046b565b6105ea5760405162461bcd60e51b815260206004820152604e60248201527f596f752063616e6e6f742068617665203220646966666572656e7420746f6b6560448201527f6e7320696e207468697320636f6e74726163742c20576974686472617720657860648201526d34b9ba34b733903a37b5b2b7399760911b608482015260a4016101a7565b600580546001600160a01b0319166001600160a01b038416908117909155604051636eb1769f60e11b815233600482015230602482015282919063dd62ed3e90604401602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610eac565b10156106cc5760405162461bcd60e51b815260206004820152602760248201527f596f7520646f6e2774206861766520656e6f75676820616c6c6f77616e6365206044820152663a37b5b2b7399760c91b60648201526084016101a7565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610e8a565b50806004600082825461075a9190610ec5565b90915550505050565b6000546001600160a01b0316331461078d5760405162461bcd60e51b81526004016101a790610e6a565b6001600160a01b0381166107cf5760405162461bcd60e51b815260206004820152600960248201526830204164647265737360b81b60448201526064016101a7565b600080546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527ff25e5c775abc4fde8672e6c495f9a9f0fe279bc7640d95896b49dad0fb4e6d6891015b60405180910390a150565b6000546001600160a01b031633146108555760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16156101fd5760405162461bcd60e51b815260206004820152601460248201527321b7b73a3930b1ba1034b99037b71039b0b6329760611b60448201526064016101a7565b6000546001600160a01b031633146108d05760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff166109175760405162461bcd60e51b815260206004820152600b60248201526a4e6f74206f6e2073616c6560a81b60448201526064016101a7565b6000600154116109585760405162461bcd60e51b815260206004820152600c60248201526b2737903134b239903cb2ba1760a11b60448201526064016101a7565b6002546001600160a01b03166109a15760405162461bcd60e51b815260206004820152600e60248201526d2737903134b23232b9103cb2ba1760911b60448201526064016101a7565b600080546001546040516001600160a01b0390921692839282156108fc029291818181858888f193505050501580156109de573d6000803e3d6000fd5b506002546109f4906001600160a01b0316610763565b600280546001600160a01b031916905560006001819055805460ff60a01b198116600160a01b80830460ff161502908117909255604080516001600160a01b038086168252928316929093169190911760208301527ff25e5c775abc4fde8672e6c495f9a9f0fe279bc7640d95896b49dad0fb4e6d689101610820565b600054600160a01b900460ff16610ada5760405162461bcd60e51b815260206004820152602760248201527f436f6e7472616374206973206e6f7420666f722073616c65206174207468652060448201526636b7b6b2b73a1760c91b60648201526084016101a7565b33610b1d5760405162461bcd60e51b81526020600482015260136024820152722a3c3710333937b690181030b2323932b9b99760691b60448201526064016101a7565b6000546001600160a01b0316331415610b785760405162461bcd60e51b815260206004820152601d60248201527f596f752063616e6e6f742062696420796f757220636f6e74726163742e00000060448201526064016101a7565b60003411610bb55760405162461bcd60e51b815260206004820152600a60248201526905072696365203c3d20360b41b60448201526064016101a7565b600354341015610bff5760405162461bcd60e51b81526020600482015260156024820152742134b2101e1021b7b73a3930b1ba10383934b1b29760591b60448201526064016101a7565b6001543411610c635760405162461bcd60e51b815260206004820152602a60248201527f596f7572732069736e27742074686520686967686573742c20697420697320756044820152693730b1b1b2b83a32b21760b11b60648201526084016101a7565b6000600154118015610c7f57506002546001600160a01b031615155b15610cc2576002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610cc0573d6000803e3d6000fd5b505b60028054346001556001600160a01b03191633179055565b6000546001600160a01b03163314610d045760405162461bcd60e51b81526004016101a790610e6a565b600054600160a01b900460ff16610d555760405162461bcd60e51b815260206004820152601560248201527421b7b73a3930b1ba103737ba1037b71039b0b6329760591b60448201526064016101a7565b6000805460ff60a01b198116600160a01b9182900460ff161590910217905560015415801590610d8f57506002546001600160a01b031615155b15610dd2576002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610dd0573d6000803e3d6000fd5b505b600280546001600160a01b03191690556000600155565b600060208284031215610dfb57600080fd5b5035919050565b6001600160a01b0381168114610e1757600080fd5b50565b600060208284031215610e2c57600080fd5b8135610e3781610e02565b9392505050565b60008060408385031215610e5157600080fd5b8235610e5c81610e02565b946020939093013593505050565b60208082526006908201526510a7bbb732b960d11b604082015260600190565b600060208284031215610e9c57600080fd5b81518015158114610e3757600080fd5b600060208284031215610ebe57600080fd5b5051919050565b60008219821115610ee657634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fb343882bbf39d706bf5001a37b82948d5b551ca210811e1085ff9ba3afff4ee64736f6c634300080c0033",
  "deployedSourceMap": "768:6404:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6896:274;;;;;;;;;;;;;:::i;:::-;;3359:430;;;;;;;;;;-1:-1:-1;3359:430:1;;;;;:::i;:::-;;:::i;1526:239::-;;;;;;;;;;-1:-1:-1;1526:239:1;;;;;:::i;:::-;;:::i;:::-;;;783:14:4;;776:22;758:41;;746:2;731:18;1526:239:1;;;;;;;2293:638;;;;;;;;;;-1:-1:-1;2293:638:1;;;;;:::i;:::-;;:::i;852:246:2:-;;;;;;;;;;-1:-1:-1;852:246:2;;;;;:::i;:::-;;:::i;6470:270:1:-;;;;;;;;;;;;;:::i;5176:661::-;;;;;;;;;;;;;:::i;4224:778::-;;;:::i;5941:308::-;;;;;;;;;;;;;:::i;6896:274::-;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;;;;;;;;;6960:7:1::1;::::0;-1:-1:-1;;;6960:7:1;::::1;;;6959:8;6951:37;;;::::0;-1:-1:-1;;;6951:37:1;;1934:2:4;6951:37:1::1;::::0;::::1;1916:21:4::0;1973:2;1953:18;;;1946:30;-1:-1:-1;;;1992:18:4;;;1985:46;2048:18;;6951:37:1::1;1732:340:4::0;6951:37:1::1;7031:1;7006:22;;:26;6998:73;;;::::0;-1:-1:-1;;;6998:73:1;;2279:2:4;6998:73:1::1;::::0;::::1;2261:21:4::0;2318:2;2298:18;;;2291:30;2357:34;2337:18;;;2330:62;-1:-1:-1;;;2408:18:4;;;2401:32;2450:19;;6998:73:1::1;2077:398:4::0;6998:73:1::1;7090:5;::::0;7117:22:::1;::::0;;7090:50:::1;::::0;-1:-1:-1;;;7090:50:1;;7105:10:::1;7090:50:::0;;::::1;2654:51:4::0;;;;2721:18;;;2714:34;-1:-1:-1;;;;;7090:5:1;;::::1;::::0;:14:::1;::::0;2627:18:4;;7090:50:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7158:5:1::1;7151:12:::0;;-1:-1:-1;;;;;;7151:12:1::1;::::0;;6896:274::o;3359:430::-;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;3441:7:1::1;::::0;-1:-1:-1;;;3441:7:1;::::1;;;3440:8;3432:56;;;::::0;-1:-1:-1;;;3432:56:1;;3243:2:4;3432:56:1::1;::::0;::::1;3225:21:4::0;3282:2;3262:18;;;3255:30;3321:34;3301:18;;;3294:62;-1:-1:-1;;;3372:18:4;;;3365:33;3415:19;;3432:56:1::1;3041:399:4::0;3432:56:1::1;3583:2;3557:22;;:28;;3549:104;;;::::0;-1:-1:-1;;;3549:104:1;;3647:2:4;3549:104:1::1;::::0;::::1;3629:21:4::0;3686:2;3666:18;;;3659:30;3725:34;3705:18;;;3698:62;3796:33;3776:18;;;3769:61;3847:19;;3549:104:1::1;3445:427:4::0;3549:104:1::1;3682:7;3671;:18;;3663:57;;;::::0;-1:-1:-1;;;3663:57:1;;4079:2:4;3663:57:1::1;::::0;::::1;4061:21:4::0;4118:2;4098:18;;;4091:30;4157:28;4137:18;;;4130:56;4203:18;;3663:57:1::1;3877:350:4::0;3663:57:1::1;3741:7;::::0;;-1:-1:-1;;;;3730:18:1;::::1;-1:-1:-1::0;;;3741:7:1;;;::::1;;;3740:8;3730:18:::0;;::::1;;::::0;;3758:14:::1;:24:::0;3359:430::o;1526:239::-;1627:5;;1582:4;;-1:-1:-1;;;;;1627:5:1;;;1619:28;;;1680:24;;;1619:28;;1732:25;;;1744:13;1732:25;1724:34;1526:239;-1:-1:-1;;;;1526:239:1:o;2293:638::-;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;2387:7:1::1;::::0;-1:-1:-1;;;2387:7:1;::::1;;;2386:8;2378:40;;;::::0;-1:-1:-1;;;2378:40:1;;4434:2:4;2378:40:1::1;::::0;::::1;4416:21:4::0;4473:2;4453:18;;;4446:30;-1:-1:-1;;;4492:18:4;;;4485:49;4551:18;;2378:40:1::1;4232:343:4::0;2378:40:1::1;-1:-1:-1::0;;;;;2436:20:1;::::1;2428:51;;;::::0;-1:-1:-1;;;2428:51:1;;4782:2:4;2428:51:1::1;::::0;::::1;4764:21:4::0;4821:2;4801:18;;;4794:30;-1:-1:-1;;;4840:18:4;;;4833:48;4898:18;;2428:51:1::1;4580:342:4::0;2428:51:1::1;2497:26;2515:6;2497:10;:26::i;:::-;2489:117;;;::::0;-1:-1:-1;;;2489:117:1;;5129:2:4;2489:117:1::1;::::0;::::1;5111:21:4::0;5168:2;5148:18;;;5141:30;5207:34;5187:18;;;5180:62;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:19:4;;;5322:45;5384:19;;2489:117:1::1;4927:482:4::0;2489:117:1::1;2617:5;:22:::0;;-1:-1:-1;;;;;;2617:22:1::1;-1:-1:-1::0;;;;;2617:22:1;::::1;::::0;;::::1;::::0;;;2719:42:::1;::::0;-1:-1:-1;;;2719:42:1;;2735:10:::1;2719:42;::::0;::::1;5626:34:4::0;2755:4:1::1;5676:18:4::0;;;5669:43;2765:7:1;;2617:22;2719:15:::1;::::0;5561:18:4;;2719:42:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;2711:105;;;::::0;-1:-1:-1;;;2711:105:1;;6114:2:4;2711:105:1::1;::::0;::::1;6096:21:4::0;6153:2;6133:18;;;6126:30;6192:34;6172:18;;;6165:62;-1:-1:-1;;;6243:18:4;;;6236:37;6290:19;;2711:105:1::1;5912:403:4::0;2711:105:1::1;2826:5;::::0;:54:::1;::::0;-1:-1:-1;;;2826:54:1;;2845:10:::1;2826:54;::::0;::::1;6560:34:4::0;2865:4:1::1;6610:18:4::0;;;6603:43;6662:18;;;6655:34;;;-1:-1:-1;;;;;2826:5:1;;::::1;::::0;:18:::1;::::0;6495::4;;2826:54:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2917:7;2891:22;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;2293:638:1:o;852:246:2:-;619:14;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;940:32:2;::::1;932:54;;;::::0;-1:-1:-1;;;932:54:2;;7132:2:4;932:54:2::1;::::0;::::1;7114:21:4::0;7171:1;7151:18;;;7144:29;-1:-1:-1;;;7189:18:4;;;7182:39;7238:18;;932:54:2::1;6930:332:4::0;932:54:2::1;996:14;:35:::0;;-1:-1:-1;;;;;;996:35:2::1;-1:-1:-1::0;;;;;996:35:2;::::1;::::0;;::::1;::::0;;;1046:45:::1;::::0;;1060:10:::1;5626:34:4::0;;5691:2;5676:18;;5669:43;;;;1046:45:2::1;::::0;5561:18:4;1046:45:2::1;;;;;;;;852:246:::0;:::o;6470:270:1:-;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;6534:7:1::1;::::0;-1:-1:-1;;;6534:7:1;::::1;;;6533:8;6525:41;;;::::0;-1:-1:-1;;;6525:41:1;;7469:2:4;6525:41:1::1;::::0;::::1;7451:21:4::0;7508:2;7488:18;;;7481:30;-1:-1:-1;;;7527:18:4;;;7520:50;7587:18;;6525:41:1::1;7267:344:4::0;5176:661:1;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;5237:7:1::1;::::0;-1:-1:-1;;;5237:7:1;::::1;;;5229:31;;;::::0;-1:-1:-1;;;5229:31:1;;7818:2:4;5229:31:1::1;::::0;::::1;7800:21:4::0;7857:2;7837:18;;;7830:30;-1:-1:-1;;;7876:18:4;;;7869:41;7927:18;;5229:31:1::1;7616:335:4::0;5229:31:1::1;5359:1;5345:11;;:15;5337:40;;;::::0;-1:-1:-1;;;5337:40:1;;8158:2:4;5337:40:1::1;::::0;::::1;8140:21:4::0;8197:2;8177:18;;;8170:30;-1:-1:-1;;;8216:18:4;;;8209:42;8268:18;;5337:40:1::1;7956:336:4::0;5337:40:1::1;5395:14;::::0;-1:-1:-1;;;;;5395:14:1::1;5387:55;;;::::0;-1:-1:-1;;;5387:55:1;;8499:2:4;5387:55:1::1;::::0;::::1;8481:21:4::0;8538:2;8518:18;;;8511:30;-1:-1:-1;;;8557:18:4;;;8550:44;8611:18;;5387:55:1::1;8297:338:4::0;5387:55:1::1;5453:26;5482:14:::0;;;5540:11;5507:45:::1;::::0;-1:-1:-1;;;;;5482:14:1;;::::1;::::0;;;5507:45;::::1;;;::::0;5540:11;5507:45;5453:26;5507:45;5540:11;5482:14;5507:45;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5576:14:1::1;::::0;5562:29:::1;::::0;-1:-1:-1;;;;;5576:14:1::1;5562:13;:29::i;:::-;5609:14;5602:21:::0;;-1:-1:-1;;;;;;5602:21:1::1;::::0;;-1:-1:-1;;5633:18:1;;;5681:7;;-1:-1:-1;;;;5670:18:1;::::1;-1:-1:-1::0;;;5681:7:1;;::::1;;;5680:8;5670:18;::::0;;::::1;::::0;;;5781:49:::1;::::0;;-1:-1:-1;;;;;5644:15:4;;;5626:34;;5815:14:1;;;;;;;;;;;5691:2:4;5676:18;;5669:43;5781:49:1::1;::::0;5561:18:4;5781:49:1::1;5414:304:4::0;4224:778:1;4284:7;;-1:-1:-1;;;4284:7:1;;;;4276:59;;;;-1:-1:-1;;;4276:59:1;;8842:2:4;4276:59:1;;;8824:21:4;8881:2;8861:18;;;8854:30;8920:34;8900:18;;;8893:62;-1:-1:-1;;;8971:18:4;;;8964:37;9018:19;;4276:59:1;8640:403:4;4276:59:1;4400:10;4392:56;;;;-1:-1:-1;;;4392:56:1;;9250:2:4;4392:56:1;;;9232:21:4;9289:2;9269:18;;;9262:30;-1:-1:-1;;;9308:18:4;;;9301:49;9367:18;;4392:56:1;9048:343:4;4392:56:1;4480:14;;-1:-1:-1;;;;;4480:14:1;4466:10;:28;;4458:70;;;;-1:-1:-1;;;4458:70:1;;9598:2:4;4458:70:1;;;9580:21:4;9637:2;9617:18;;;9610:30;9676:31;9656:18;;;9649:59;9725:18;;4458:70:1;9396:353:4;4458:70:1;4558:1;4546:9;:13;4538:36;;;;-1:-1:-1;;;4538:36:1;;9956:2:4;4538:36:1;;;9938:21:4;9995:2;9975:18;;;9968:30;-1:-1:-1;;;10014:18:4;;;10007:40;10064:18;;4538:36:1;9754:334:4;4538:36:1;4605:14;;4592:9;:27;;4584:61;;;;-1:-1:-1;;;4584:61:1;;10295:2:4;4584:61:1;;;10277:21:4;10334:2;10314:18;;;10307:30;-1:-1:-1;;;10353:18:4;;;10346:51;10414:18;;4584:61:1;10093:345:4;4584:61:1;4675:11;;4663:9;:23;4655:78;;;;-1:-1:-1;;;4655:78:1;;10645:2:4;4655:78:1;;;10627:21:4;10684:2;10664:18;;;10657:30;10723:34;10703:18;;;10696:62;-1:-1:-1;;;10774:18:4;;;10767:40;10824:19;;4655:78:1;10443:406:4;4655:78:1;4763:1;4749:11;;:15;:47;;;;-1:-1:-1;4768:14:1;;-1:-1:-1;;;;;4768:14:1;:28;;4749:47;4745:110;;;4818:14;;;4843:11;4810:45;;-1:-1:-1;;;;;4818:14:1;;;;4810:45;;;;;4843:11;4818:14;4810:45;4818:14;4810:45;4843:11;4818:14;4810:45;;;;;;;;;;;;;;;;;;;;;4745:110;4877:14;4870:21;;4949:9;4870:21;4935:23;-1:-1:-1;;;;;;4870:21:1;4985:10;4968:27;;;4224:778::o;5941:308::-;619:14:2;;-1:-1:-1;;;;;619:14:2;605:10;:28;597:47;;;;-1:-1:-1;;;597:47:2;;;;;;;:::i;:::-;6000:7:1::1;::::0;-1:-1:-1;;;6000:7:1;::::1;;;5992:41;;;::::0;-1:-1:-1;;;5992:41:1;;11056:2:4;5992:41:1::1;::::0;::::1;11038:21:4::0;11095:2;11075:18;;;11068:30;-1:-1:-1;;;11114:18:4;;;11107:51;11175:18;;5992:41:1::1;10854:345:4::0;5992:41:1::1;6054:7;::::0;;-1:-1:-1;;;;6043:18:1;::::1;-1:-1:-1::0;;;6054:7:1;;;::::1;;;6053:8;6043:18:::0;;::::1;;::::0;;-1:-1:-1;6076:11:1;:15;;;;:47:::1;;-1:-1:-1::0;6095:14:1::1;::::0;-1:-1:-1;;;;;6095:14:1::1;:28:::0;::::1;6076:47;6072:110;;;6145:14;::::0;;6170:11;6137:45:::1;::::0;-1:-1:-1;;;;;6145:14:1;;::::1;::::0;6137:45;::::1;;;::::0;6170:11;6145:14:::1;6137:45:::0;6145:14;6137:45;6170:11;6145:14;6137:45;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;6072:110;6200:14;6193:21:::0;;-1:-1:-1;;;;;;6193:21:1::1;::::0;;6200:14:::1;6193:21:::0;6224:18;5941:308::o;14:180:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:4;;14:180;-1:-1:-1;14:180:4:o;199:139::-;-1:-1:-1;;;;;282:31:4;;272:42;;262:70;;328:1;325;318:12;262:70;199:139;:::o;343:270::-;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;525:9;512:23;544:39;577:5;544:39;:::i;:::-;602:5;343:270;-1:-1:-1;;;343:270:4:o;810:323::-;878:6;886;939:2;927:9;918:7;914:23;910:32;907:52;;;955:1;952;945:12;907:52;994:9;981:23;1013:39;1046:5;1013:39;:::i;:::-;1071:5;1123:2;1108:18;;;;1095:32;;-1:-1:-1;;;810:323:4:o;1398:329::-;1600:2;1582:21;;;1639:1;1619:18;;;1612:29;-1:-1:-1;;;1672:2:4;1657:18;;1650:36;1718:2;1703:18;;1398:329::o;2759:277::-;2826:6;2879:2;2867:9;2858:7;2854:23;2850:32;2847:52;;;2895:1;2892;2885:12;2847:52;2927:9;2921:16;2980:5;2973:13;2966:21;2959:5;2956:32;2946:60;;3002:1;2999;2992:12;5723:184;5793:6;5846:2;5834:9;5825:7;5821:23;5817:32;5814:52;;;5862:1;5859;5852:12;5814:52;-1:-1:-1;5885:16:4;;5723:184;-1:-1:-1;5723:184:4:o;6700:225::-;6740:3;6771:1;6767:6;6764:1;6761:13;6758:136;;;6816:10;6811:3;6807:20;6804:1;6797:31;6851:4;6848:1;6841:15;6879:4;6876:1;6869:15;6758:136;-1:-1:-1;6910:9:4;;6700:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    768,
    7172
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79FF433D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x79FF433D EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xC3D22FB6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xD54E255E EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xFE741FAD EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46C8A29 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x11F9CF20 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x4BF0D331 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x66168BD7 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x82B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xA71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x436F6E7472616374206F6E2073616C65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320636F6E747261637420686173206E6F2073746F72656420746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6E73 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420697320666F722073616C6520617420746865206D6F6D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x373A17 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206D7573742062652061206D696E696D756D206F66203130302074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320746F206C69737420636F6E7472616374206F6E2073616C652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH8 0x6F05B59D3B200000 DUP2 GT ISZERO PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265203C3D20382065746865722E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO SWAP2 DUP5 AND EQ DUP2 DUP1 PUSH2 0x48B JUMPI POP DUP1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x436F6E7472616374206973206F6E2073616C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5A65726F20746F6B656E2061646472657373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x561 DUP3 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742068617665203220646966666572656E7420746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E7320696E207468697320636F6E74726163742C205769746864726177206578 PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x34B9BA34B733903A37B5B2B73997 PUSH1 0x91 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0xEAC JUMP JUMPDEST LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820616C6C6F77616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A37B5B2B73997 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x747 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x302041646472657373 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF25E5C775ABC4FDE8672E6C495F9A9F0FE279BC7640D95896B49DAD0FB4E6D68 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B7B73A3930B1BA1034B99037B71039B0B63297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F74206F6E2073616C65 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737903134B239903CB2BA17 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737903134B23232B9103CB2BA17 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x9F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x763 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP1 DUP4 DIV PUSH1 0xFF AND ISZERO MUL SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE SWAP3 DUP4 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xF25E5C775ABC4FDE8672E6C495F9A9F0FE279BC7640D95896B49DAD0FB4E6D68 SWAP2 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206973206E6F7420666F722073616C652061742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x36B7B6B2B73A17 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLER PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3C3710333937B690181030B2323932B9B997 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062696420796F757220636F6E74726163742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x5072696365203C3D203 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2134B2101E1021B7B73A3930B1BA10383934B1B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7572732069736E27742074686520686967686573742C2069742069732075 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3730B1B1B2B83A32B217 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0xC7F JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xCC2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLVALUE PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B7B73A3930B1BA103737BA1037B71039B0B63297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD8F JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDD2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE37 DUP2 PUSH2 0xE02 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE5C DUP2 PUSH2 0xE02 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x10A7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CALLVALUE CODESIZE DUP3 0xBB RETURN SWAP14 PUSH17 0x6BF5001A37B82948D5B551CA210811E108 0x5F 0xF9 0xBA GASPRICE SELFDESTRUCT DELEGATECALL 0xEE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86"
    },
    "12": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x79FF433D"
    },
    "25": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x79FF433D"
    },
    "36": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116"
    },
    "40": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8D8F2ADB"
    },
    "47": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "51": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC3D22FB6"
    },
    "58": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B"
    },
    "62": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD54E255E"
    },
    "69": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x160"
    },
    "73": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFE741FAD"
    },
    "80": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168"
    },
    "84": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "REVERT",
      "path": "1"
    },
    "89": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x46C8A29"
    },
    "96": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B"
    },
    "100": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x11F9CF20"
    },
    "107": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "111": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4BF0D331"
    },
    "118": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC2"
    },
    "122": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x66168BD7"
    },
    "129": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "EQ",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "133": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "134": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "137": {
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "138": {
      "first_revert": true,
      "fn": null,
      "offset": [
        768,
        7172
      ],
      "op": "REVERT",
      "path": "1"
    },
    "139": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "140": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "141": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "143": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "146": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "149": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "DUP1",
      "path": "1"
    },
    "150": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "REVERT",
      "path": "1"
    },
    "151": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "POP",
      "path": "1"
    },
    "153": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "156": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17D"
    },
    "159": {
      "fn": "Sellable.destructTokens",
      "jump": "i",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "160": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "161": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "STOP",
      "path": "1"
    },
    "162": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "164": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "165": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "166": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE"
    },
    "169": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "170": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "172": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "REVERT",
      "path": "1"
    },
    "174": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "175": {
      "op": "POP"
    },
    "176": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "179": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD"
    },
    "182": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "183": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "185": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE9"
    },
    "188": {
      "fn": "Sellable.placeOnSaleInGwei",
      "jump": "i",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMP",
      "path": "1"
    },
    "189": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "190": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "193": {
      "fn": "Sellable.placeOnSaleInGwei",
      "jump": "i",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMP",
      "path": "1"
    },
    "194": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "195": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "196": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "198": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE"
    },
    "201": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "202": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "204": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "DUP1",
      "path": "1"
    },
    "205": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "REVERT",
      "path": "1"
    },
    "206": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "207": {
      "op": "POP"
    },
    "208": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "211": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "214": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "215": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "217": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1A"
    },
    "220": {
      "fn": "Sellable.canDeposit",
      "jump": "i",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "221": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "222": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46B"
    },
    "225": {
      "fn": "Sellable.canDeposit",
      "jump": "i",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "229": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "ISZERO"
    },
    "232": {
      "op": "ISZERO"
    },
    "233": {
      "op": "DUP2"
    },
    "234": {
      "op": "MSTORE"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "237": {
      "op": "ADD"
    },
    "238": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "240": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "241": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "DUP1",
      "path": "1"
    },
    "242": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "243": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "SUB",
      "path": "1"
    },
    "244": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "245": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "RETURN",
      "path": "1"
    },
    "246": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "247": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "248": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "DUP1",
      "path": "1"
    },
    "249": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "250": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x102"
    },
    "253": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "254": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "256": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "DUP1",
      "path": "1"
    },
    "257": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "REVERT",
      "path": "1"
    },
    "258": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "259": {
      "op": "POP"
    },
    "260": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "263": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "266": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "267": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "269": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE3E"
    },
    "272": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x493"
    },
    "277": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMP",
      "path": "1"
    },
    "278": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "279": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "280": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "281": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "282": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122"
    },
    "285": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "286": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "288": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "289": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "REVERT",
      "path": "2"
    },
    "290": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "295": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "298": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "299": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "301": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1A"
    },
    "304": {
      "fn": "Owned.moveOwnership",
      "jump": "i",
      "offset": [
        852,
        1098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "305": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x763"
    },
    "309": {
      "fn": "Owned.moveOwnership",
      "jump": "i",
      "offset": [
        852,
        1098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "312": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "DUP1",
      "path": "1"
    },
    "313": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "314": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x142"
    },
    "317": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "318": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "320": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "DUP1",
      "path": "1"
    },
    "321": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "REVERT",
      "path": "1"
    },
    "322": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "323": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "POP",
      "path": "1"
    },
    "324": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "327": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82B"
    },
    "330": {
      "fn": "Sellable.withdrawTokens",
      "jump": "i",
      "offset": [
        6470,
        6740
      ],
      "op": "JUMP",
      "path": "1"
    },
    "331": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "332": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "333": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "DUP1",
      "path": "1"
    },
    "334": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "335": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x157"
    },
    "338": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "339": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "341": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "DUP1",
      "path": "1"
    },
    "342": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "REVERT",
      "path": "1"
    },
    "343": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "344": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "POP",
      "path": "1"
    },
    "345": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "348": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A6"
    },
    "351": {
      "fn": "Sellable.sellContract",
      "jump": "i",
      "offset": [
        5176,
        5837
      ],
      "op": "JUMP",
      "path": "1"
    },
    "352": {
      "fn": "Sellable.bidContract",
      "offset": [
        4224,
        5002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "353": {
      "fn": "Sellable.bidContract",
      "offset": [
        4224,
        5002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "356": {
      "fn": "Sellable.bidContract",
      "offset": [
        4224,
        5002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA71"
    },
    "359": {
      "fn": "Sellable.bidContract",
      "jump": "i",
      "offset": [
        4224,
        5002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "360": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "361": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "362": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "363": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "364": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "367": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "368": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "370": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "DUP1",
      "path": "1"
    },
    "371": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "REVERT",
      "path": "1"
    },
    "372": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "POP",
      "path": "1"
    },
    "374": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "377": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDA"
    },
    "380": {
      "fn": "Sellable.revokeSale",
      "jump": "i",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "381": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "382": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "384": {
      "fn": "Sellable.destructTokens",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "391": {
      "op": "SHL"
    },
    "392": {
      "op": "SUB"
    },
    "393": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "394": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "395": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "396": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "399": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "400": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "402": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "411": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "412": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "414": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "415": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "418": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "419": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "422": {
      "fn": "Sellable.destructTokens",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "423": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "424": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "426": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "427": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "428": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "429": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "SUB",
      "path": "2"
    },
    "430": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "431": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "432": {
      "fn": "Sellable.destructTokens",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x0"
    },
    "435": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "442": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "DIV",
      "path": "1"
    },
    "443": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "445": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6960,
        6967
      ],
      "op": "AND",
      "path": "1"
    },
    "446": {
      "branch": 45,
      "fn": "Sellable.destructTokens",
      "offset": [
        6959,
        6967
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "447": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD"
    },
    "450": {
      "branch": 45,
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "451": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "453": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "454": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "458": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "460": {
      "op": "SHL"
    },
    "461": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "DUP2",
      "path": "1"
    },
    "462": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "465": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "467": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "DUP3",
      "path": "1"
    },
    "468": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "ADD",
      "path": "1"
    },
    "469": {
      "op": "MSTORE"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH16",
      "value": "0x436F6E7472616374206F6E2073616C65"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "499": {
      "op": "DUP3"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "508": {
      "op": "JUMP"
    },
    "509": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6951,
        6988
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "510": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7031,
        7032
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x0"
    },
    "512": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7006,
        7028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "514": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7006,
        7028
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "515": {
      "branch": 46,
      "fn": "Sellable.destructTokens",
      "offset": [
        7006,
        7032
      ],
      "op": "GT",
      "path": "1"
    },
    "516": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25A"
    },
    "519": {
      "branch": 46,
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "520": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "522": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "529": {
      "op": "SHL"
    },
    "530": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "DUP2",
      "path": "1"
    },
    "531": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "534": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "536": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "DUP3",
      "path": "1"
    },
    "537": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "ADD",
      "path": "1"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "543": {
      "op": "DUP3"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "PUSH32",
      "value": "0x5468697320636F6E747261637420686173206E6F2073746F72656420746F6B65"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "581": {
      "op": "DUP3"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH2",
      "value": "0x6E73"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "589": {
      "op": "SHL"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "592": {
      "op": "DUP3"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "601": {
      "op": "JUMP"
    },
    "602": {
      "fn": "Sellable.destructTokens",
      "offset": [
        6998,
        7071
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "603": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x5"
    },
    "605": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "606": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7117,
        7139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "608": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7117,
        7139
      ],
      "op": "DUP1",
      "path": "1"
    },
    "609": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7117,
        7139
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "610": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "612": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "613": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "620": {
      "op": "SHL"
    },
    "621": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "622": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "623": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7105,
        7115
      ],
      "op": "CALLER",
      "path": "1"
    },
    "624": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "625": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "626": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ADD",
      "path": "1"
    },
    "627": {
      "op": "SWAP3"
    },
    "628": {
      "op": "SWAP1"
    },
    "629": {
      "op": "SWAP3"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "633": {
      "op": "DUP3"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "646": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "AND",
      "path": "1"
    },
    "647": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "648": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7104
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "653": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "656": {
      "op": "ADD"
    },
    "657": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "659": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "661": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "662": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "663": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP4",
      "path": "1"
    },
    "664": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "SUB",
      "path": "1"
    },
    "665": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "666": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "668": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP8",
      "path": "1"
    },
    "669": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "GAS",
      "path": "1"
    },
    "670": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "CALL",
      "path": "1"
    },
    "671": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "672": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "673": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "674": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "677": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "678": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "679": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "681": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "682": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "683": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "684": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "686": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "REVERT",
      "path": "1"
    },
    "687": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "688": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "POP",
      "path": "1"
    },
    "689": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "POP",
      "path": "1"
    },
    "690": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "POP",
      "path": "1"
    },
    "691": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "POP",
      "path": "1"
    },
    "692": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "694": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "695": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "696": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "698": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "NOT",
      "path": "1"
    },
    "699": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "701": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP3",
      "path": "1"
    },
    "702": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ADD",
      "path": "1"
    },
    "703": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "AND",
      "path": "1"
    },
    "704": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP3",
      "path": "1"
    },
    "705": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ADD",
      "path": "1"
    },
    "706": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "707": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "709": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "710": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "POP",
      "path": "1"
    },
    "711": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "712": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "ADD",
      "path": "1"
    },
    "713": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "714": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D3"
    },
    "717": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "718": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "719": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8A"
    },
    "722": {
      "fn": "Sellable.destructTokens",
      "jump": "i",
      "offset": [
        7090,
        7140
      ],
      "op": "JUMP",
      "path": "1"
    },
    "723": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7090,
        7140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7158,
        7163
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x5"
    },
    "727": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7151,
        7163
      ],
      "op": "DUP1",
      "path": "1"
    },
    "728": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7151,
        7163
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "op": "NOT"
    },
    "738": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7151,
        7163
      ],
      "op": "AND",
      "path": "1"
    },
    "739": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7151,
        7163
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "740": {
      "fn": "Sellable.destructTokens",
      "offset": [
        7151,
        7163
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "741": {
      "fn": "Sellable.destructTokens",
      "jump": "o",
      "offset": [
        6896,
        7170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "742": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "743": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "745": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "752": {
      "op": "SHL"
    },
    "753": {
      "op": "SUB"
    },
    "754": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "755": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "756": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "757": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "760": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "761": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "763": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "772": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "773": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "775": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "776": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "779": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "780": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "783": {
      "fn": "Sellable.placeOnSaleInGwei",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "784": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "785": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "787": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "794": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "DIV",
      "path": "1"
    },
    "795": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "797": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3441,
        3448
      ],
      "op": "AND",
      "path": "1"
    },
    "798": {
      "branch": 47,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3440,
        3448
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "799": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x376"
    },
    "802": {
      "branch": 47,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "803": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "805": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "814": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "817": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "819": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "DUP3",
      "path": "1"
    },
    "820": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "ADD",
      "path": "1"
    },
    "821": {
      "op": "MSTORE"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "826": {
      "op": "DUP3"
    },
    "827": {
      "op": "ADD"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420697320666F722073616C6520617420746865206D6F6D65"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH3",
      "value": "0x373A17"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "885": {
      "op": "JUMP"
    },
    "886": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3432,
        3488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "887": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3583,
        3585
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x32"
    },
    "889": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3557,
        3579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "891": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3557,
        3579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "892": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3557,
        3585
      ],
      "op": "LT",
      "path": "1"
    },
    "893": {
      "branch": 48,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3557,
        3585
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "894": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EF"
    },
    "897": {
      "branch": 48,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "898": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "900": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "DUP2",
      "path": "1"
    },
    "909": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "912": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "914": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "DUP3",
      "path": "1"
    },
    "915": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "ADD",
      "path": "1"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "921": {
      "op": "DUP3"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH32",
      "value": "0x5468657265206D7573742062652061206D696E696D756D206F66203130302074"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "959": {
      "op": "DUP3"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH32",
      "value": "0x6F6B656E7320746F206C69737420636F6E7472616374206F6E2073616C652E00"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1006": {
      "op": "JUMP"
    },
    "1007": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3549,
        3653
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1008": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3682,
        3689
      ],
      "op": "PUSH8",
      "path": "1",
      "statement": 6,
      "value": "0x6F05B59D3B200000"
    },
    "1017": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3671,
        3678
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1018": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3671,
        3689
      ],
      "op": "GT",
      "path": "1"
    },
    "1019": {
      "branch": 49,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3671,
        3689
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1020": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x447"
    },
    "1023": {
      "branch": 49,
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1024": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1026": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1035": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1040": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1041": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "ADD",
      "path": "1"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1047": {
      "op": "DUP3"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D757374206265203C3D20382065746865722E000000000000"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1085": {
      "op": "DUP3"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "op": "MSTORE"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1094": {
      "op": "JUMP"
    },
    "1095": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3663,
        3720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1096": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1098": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1099": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "NOT"
    },
    "1106": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1107": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "AND",
      "path": "1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1114": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1115": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1116": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "DIV",
      "path": "1"
    },
    "1117": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1119": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3741,
        3748
      ],
      "op": "AND",
      "path": "1"
    },
    "1120": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3740,
        3748
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1121": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1122": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1123": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "MUL",
      "path": "1"
    },
    "1124": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "OR",
      "path": "1"
    },
    "1125": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1126": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3730,
        3748
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1127": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3758,
        3772
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x3"
    },
    "1129": {
      "fn": "Sellable.placeOnSaleInGwei",
      "offset": [
        3758,
        3782
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1130": {
      "fn": "Sellable.placeOnSaleInGwei",
      "jump": "o",
      "offset": [
        3359,
        3789
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1131": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1132": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1627,
        1632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1134": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1627,
        1632
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1135": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1582,
        1586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1137": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1582,
        1586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1627,
        1632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1147": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1627,
        1632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1148": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1627,
        1632
      ],
      "op": "AND",
      "path": "1"
    },
    "1149": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1619,
        1647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1150": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1619,
        1647
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1151": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1619,
        1647
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1152": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1680,
        1704
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1153": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1680,
        1704
      ],
      "op": "AND",
      "path": "1"
    },
    "1154": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1680,
        1704
      ],
      "op": "EQ",
      "path": "1"
    },
    "1155": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1619,
        1647
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1156": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1619,
        1647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1157": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1732,
        1757
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x48B"
    },
    "1160": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1732,
        1757
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1161": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1732,
        1757
      ],
      "op": "POP",
      "path": "1"
    },
    "1162": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1744,
        1757
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1163": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1732,
        1757
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1164": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1724,
        1758
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1165": {
      "fn": "Sellable.canDeposit",
      "offset": [
        1526,
        1765
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1166": {
      "op": "POP"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "fn": "Sellable.canDeposit",
      "jump": "o",
      "offset": [
        1526,
        1765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1171": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1172": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1174": {
      "fn": "Sellable.depositTokens",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "1184": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1185": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "1186": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "1189": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1190": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1192": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1201": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1202": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1204": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "1205": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1208": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1209": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "1212": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1213": {
      "fn": "Sellable.depositTokens",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1214": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1216": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1223": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "DIV",
      "path": "1"
    },
    "1224": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1226": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2387,
        2394
      ],
      "op": "AND",
      "path": "1"
    },
    "1227": {
      "branch": 50,
      "fn": "Sellable.depositTokens",
      "offset": [
        2386,
        2394
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1228": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50D"
    },
    "1231": {
      "branch": 50,
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1232": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1234": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1243": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1248": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1249": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "ADD",
      "path": "1"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1255": {
      "op": "DUP3"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH19",
      "value": "0x436F6E7472616374206973206F6E2073616C65"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1283": {
      "op": "DUP3"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1292": {
      "op": "JUMP"
    },
    "1293": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2378,
        2418
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2436,
        2456
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 11
    },
    "1303": {
      "branch": 51,
      "fn": "Sellable.depositTokens",
      "offset": [
        2436,
        2456
      ],
      "op": "AND",
      "path": "1"
    },
    "1304": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x558"
    },
    "1307": {
      "branch": 51,
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1308": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1310": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1319": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1322": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1324": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1325": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "ADD",
      "path": "1"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1331": {
      "op": "DUP3"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH18",
      "value": "0x5A65726F20746F6B656E2061646472657373"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1358": {
      "op": "DUP3"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "MSTORE"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1367": {
      "op": "JUMP"
    },
    "1368": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2428,
        2479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1369": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2497,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x561"
    },
    "1372": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2515,
        2521
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1373": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2497,
        2507
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46B"
    },
    "1376": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2497,
        2523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1377": {
      "branch": 52,
      "fn": "Sellable.depositTokens",
      "offset": [
        2497,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1378": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5EA"
    },
    "1381": {
      "branch": 52,
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1382": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1384": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1393": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1398": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1399": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "ADD",
      "path": "1"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F742068617665203220646966666572656E7420746F6B65"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH32",
      "value": "0x6E7320696E207468697320636F6E74726163742C205769746864726177206578"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1481": {
      "op": "DUP3"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "PUSH14",
      "value": "0x34B9BA34B733903A37B5B2B73997"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2489,
        2606
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1515": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2622
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x5"
    },
    "1517": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1518": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "op": "NOT"
    },
    "1528": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "AND",
      "path": "1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1538": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "AND",
      "path": "1"
    },
    "1539": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1540": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1541": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "OR",
      "path": "1"
    },
    "1542": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1543": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1544": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1545": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x40"
    },
    "1547": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1548": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1557": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1558": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2735,
        2745
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1559": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1561": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1562": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ADD",
      "path": "1"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2755,
        2759
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "op": "MSTORE"
    },
    "1570": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2765,
        2772
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1571": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2765,
        2772
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1572": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2617,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1573": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2734
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "1578": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2734
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1584": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1586": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1587": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1588": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1589": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "SUB",
      "path": "1"
    },
    "1590": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1591": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1592": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "GAS",
      "path": "1"
    },
    "1593": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1594": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1595": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1596": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1597": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "1600": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1601": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1602": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1604": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1605": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1606": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1607": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1609": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1610": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1611": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "POP",
      "path": "1"
    },
    "1612": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "POP",
      "path": "1"
    },
    "1613": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "POP",
      "path": "1"
    },
    "1614": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "POP",
      "path": "1"
    },
    "1615": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1617": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1618": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1619": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1621": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "NOT",
      "path": "1"
    },
    "1622": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1624": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1625": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ADD",
      "path": "1"
    },
    "1626": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "AND",
      "path": "1"
    },
    "1627": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1628": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ADD",
      "path": "1"
    },
    "1629": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1630": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1632": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1633": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "POP",
      "path": "1"
    },
    "1634": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1635": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "ADD",
      "path": "1"
    },
    "1636": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1637": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "1640": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1641": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1642": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAC"
    },
    "1645": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2719,
        2761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1646": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1647": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2772
      ],
      "op": "LT",
      "path": "1"
    },
    "1648": {
      "branch": 53,
      "fn": "Sellable.depositTokens",
      "offset": [
        2719,
        2772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1649": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6CC"
    },
    "1652": {
      "branch": 53,
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1653": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1655": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1664": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1667": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1669": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1670": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1676": {
      "op": "DUP3"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F75676820616C6C6F77616E636520"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1714": {
      "op": "DUP3"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "MSTORE"
    },
    "1717": {
      "op": "PUSH7",
      "value": "0x3A37B5B2B73997"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1727": {
      "op": "SHL"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1730": {
      "op": "DUP3"
    },
    "1731": {
      "op": "ADD"
    },
    "1732": {
      "op": "MSTORE"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "1739": {
      "op": "JUMP"
    },
    "1740": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2711,
        2816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1741": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x5"
    },
    "1743": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1744": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1746": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1747": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1756": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1757": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2845,
        2855
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1758": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1760": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1761": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2865,
        2869
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1771": {
      "op": "DUP2"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "DUP4"
    },
    "1774": {
      "op": "SWAP1"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "op": "SUB"
    },
    "1784": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1785": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1786": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "AND",
      "path": "1"
    },
    "1787": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2831
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1788": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2844
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "1793": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2844
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1799": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1801": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1802": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1803": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1804": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1805": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1806": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1808": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1809": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "GAS",
      "path": "1"
    },
    "1810": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "CALL",
      "path": "1"
    },
    "1811": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1812": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1813": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1814": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x723"
    },
    "1817": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1818": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1819": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1821": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1822": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1823": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1824": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1826": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1827": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1828": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1829": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1830": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1831": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1832": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1834": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1835": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1836": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1838": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "NOT",
      "path": "1"
    },
    "1839": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1841": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1842": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1843": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "AND",
      "path": "1"
    },
    "1844": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1845": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1846": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1847": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1849": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1850": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1851": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1852": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1853": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1854": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x747"
    },
    "1857": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1858": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1859": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8A"
    },
    "1862": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2826,
        2880
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1863": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1864": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2826,
        2880
      ],
      "op": "POP",
      "path": "1"
    },
    "1865": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2917,
        2924
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 16
    },
    "1866": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1868": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1870": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1871": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1872": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1873": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75A"
    },
    "1876": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1877": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1878": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEC5"
    },
    "1881": {
      "fn": "Sellable.depositTokens",
      "jump": "i",
      "offset": [
        2891,
        2924
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1882": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1883": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1884": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1885": {
      "fn": "Sellable.depositTokens",
      "offset": [
        2891,
        2924
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "Sellable.depositTokens",
      "jump": "o",
      "offset": [
        2293,
        2931
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1891": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1892": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1894": {
      "fn": "Owned.moveOwnership",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "op": "SUB"
    },
    "1903": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "1904": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1905": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "1906": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78D"
    },
    "1909": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1910": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1912": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1921": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1922": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1924": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "1925": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1928": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1929": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "1932": {
      "fn": "Owned.moveOwnership",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1933": {
      "fn": "Owned.moveOwnership",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1940": {
      "op": "SHL"
    },
    "1941": {
      "op": "SUB"
    },
    "1942": {
      "fn": "Owned.moveOwnership",
      "offset": [
        940,
        972
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 17
    },
    "1943": {
      "branch": 67,
      "fn": "Owned.moveOwnership",
      "offset": [
        940,
        972
      ],
      "op": "AND",
      "path": "2"
    },
    "1944": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CF"
    },
    "1947": {
      "branch": 67,
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1948": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1950": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1959": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1962": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1964": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1965": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "ADD",
      "path": "2"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1971": {
      "op": "DUP3"
    },
    "1972": {
      "op": "ADD"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "op": "PUSH9",
      "value": "0x302041646472657373"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1989": {
      "op": "DUP3"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1998": {
      "op": "JUMP"
    },
    "1999": {
      "fn": "Owned.moveOwnership",
      "offset": [
        932,
        986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2000": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x0"
    },
    "2002": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2003": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "op": "NOT"
    },
    "2013": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "AND",
      "path": "2"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "SUB"
    },
    "2022": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2023": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "AND",
      "path": "2"
    },
    "2024": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2025": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2026": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "OR",
      "path": "2"
    },
    "2027": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2028": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2029": {
      "fn": "Owned.moveOwnership",
      "offset": [
        996,
        1031
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2030": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x40"
    },
    "2032": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2033": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2034": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1060,
        1070
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2039": {
      "op": "DUP2"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "SWAP3"
    },
    "2042": {
      "op": "SWAP1"
    },
    "2043": {
      "op": "SWAP3"
    },
    "2044": {
      "op": "MSTORE"
    },
    "2045": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF25E5C775ABC4FDE8672E6C495F9A9F0FE279BC7640D95896B49DAD0FB4E6D68"
    },
    "2078": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2081": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2083": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2084": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2085": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2086": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "SUB",
      "path": "2"
    },
    "2087": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2088": {
      "fn": "Owned.moveOwnership",
      "offset": [
        1046,
        1091
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2089": {
      "fn": "Owned.moveOwnership",
      "offset": [
        852,
        1098
      ],
      "op": "POP",
      "path": "2"
    },
    "2090": {
      "fn": "Owned.moveOwnership",
      "jump": "o",
      "offset": [
        852,
        1098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2091": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6470,
        6740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2094": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "op": "SUB"
    },
    "2103": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "2104": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2105": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "2106": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x855"
    },
    "2109": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2110": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2112": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2121": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2122": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2124": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "2125": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "2128": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2129": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "2132": {
      "fn": "Sellable.withdrawTokens",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2133": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2134": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x0"
    },
    "2136": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2143": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "DIV",
      "path": "1"
    },
    "2144": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2146": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6534,
        6541
      ],
      "op": "AND",
      "path": "1"
    },
    "2147": {
      "branch": 54,
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6533,
        6541
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2148": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD"
    },
    "2151": {
      "branch": 54,
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2152": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2154": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2163": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2166": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2168": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2169": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2175": {
      "op": "DUP3"
    },
    "2176": {
      "op": "ADD"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH20",
      "value": "0x21B7B73A3930B1BA1034B99037B71039B0B63297"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "MSTORE"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "fn": "Sellable.withdrawTokens",
      "offset": [
        6525,
        6566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2213": {
      "op": "JUMP"
    },
    "2214": {
      "fn": "Sellable.sellContract",
      "offset": [
        5176,
        5837
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2215": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2217": {
      "fn": "Sellable.sellContract",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "2227": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2228": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "2229": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D0"
    },
    "2232": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2233": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2235": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2245": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2247": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "2248": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "2251": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2252": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "2255": {
      "fn": "Sellable.sellContract",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2256": {
      "fn": "Sellable.sellContract",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2257": {
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x0"
    },
    "2259": {
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2266": {
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "DIV",
      "path": "1"
    },
    "2267": {
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2269": {
      "branch": 55,
      "fn": "Sellable.sellContract",
      "offset": [
        5237,
        5244
      ],
      "op": "AND",
      "path": "1"
    },
    "2270": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x917"
    },
    "2273": {
      "branch": 55,
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2274": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2276": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2285": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2288": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2290": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2291": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "ADD",
      "path": "1"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH11",
      "value": "0x4E6F74206F6E2073616C65"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "MSTORE"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2326": {
      "op": "JUMP"
    },
    "2327": {
      "fn": "Sellable.sellContract",
      "offset": [
        5229,
        5260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2328": {
      "fn": "Sellable.sellContract",
      "offset": [
        5359,
        5360
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x0"
    },
    "2330": {
      "fn": "Sellable.sellContract",
      "offset": [
        5345,
        5356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2332": {
      "fn": "Sellable.sellContract",
      "offset": [
        5345,
        5356
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2333": {
      "branch": 56,
      "fn": "Sellable.sellContract",
      "offset": [
        5345,
        5360
      ],
      "op": "GT",
      "path": "1"
    },
    "2334": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x958"
    },
    "2337": {
      "branch": 56,
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2338": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2340": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2349": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2352": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2354": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2355": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "ADD",
      "path": "1"
    },
    "2356": {
      "op": "MSTORE"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "op": "PUSH12",
      "value": "0x2737903134B239903CB2BA17"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2382": {
      "op": "DUP3"
    },
    "2383": {
      "op": "ADD"
    },
    "2384": {
      "op": "MSTORE"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2391": {
      "op": "JUMP"
    },
    "2392": {
      "fn": "Sellable.sellContract",
      "offset": [
        5337,
        5377
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2393": {
      "fn": "Sellable.sellContract",
      "offset": [
        5395,
        5409
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x2"
    },
    "2395": {
      "fn": "Sellable.sellContract",
      "offset": [
        5395,
        5409
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "Sellable.sellContract",
      "offset": [
        5395,
        5409
      ],
      "op": "AND",
      "path": "1"
    },
    "2405": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A1"
    },
    "2408": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2409": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2411": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2420": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2425": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2426": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "ADD",
      "path": "1"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH14",
      "value": "0x2737903134B23232B9103CB2BA17"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2464": {
      "op": "JUMP"
    },
    "2465": {
      "fn": "Sellable.sellContract",
      "offset": [
        5387,
        5442
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2466": {
      "fn": "Sellable.sellContract",
      "offset": [
        5453,
        5479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2468": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2469": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2470": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2472": {
      "fn": "Sellable.sellContract",
      "offset": [
        5540,
        5551
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 24
    },
    "2473": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2475": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2482": {
      "op": "SHL"
    },
    "2483": {
      "op": "SUB"
    },
    "2484": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2485": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2486": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "AND",
      "path": "1"
    },
    "2487": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2488": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2489": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2490": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2491": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2492": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "2495": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "MUL",
      "path": "1"
    },
    "2496": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2497": {
      "fn": "Sellable.sellContract",
      "offset": [
        5540,
        5551
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2498": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2499": {
      "fn": "Sellable.sellContract",
      "offset": [
        5453,
        5479
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2500": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2501": {
      "fn": "Sellable.sellContract",
      "offset": [
        5540,
        5551
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2502": {
      "fn": "Sellable.sellContract",
      "offset": [
        5482,
        5496
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2503": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2504": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "CALL",
      "path": "1"
    },
    "2505": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2506": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "2507": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "2508": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "2509": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "2510": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2511": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2512": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2513": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DE"
    },
    "2516": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2517": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2518": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2520": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2521": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2522": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2523": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2525": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2526": {
      "fn": "Sellable.sellContract",
      "offset": [
        5507,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "fn": "Sellable.sellContract",
      "offset": [
        5576,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x2"
    },
    "2530": {
      "fn": "Sellable.sellContract",
      "offset": [
        5576,
        5590
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2531": {
      "fn": "Sellable.sellContract",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F4"
    },
    "2534": {
      "fn": "Sellable.sellContract",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2541": {
      "op": "SHL"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "fn": "Sellable.sellContract",
      "offset": [
        5576,
        5590
      ],
      "op": "AND",
      "path": "1"
    },
    "2544": {
      "fn": "Sellable.sellContract",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x763"
    },
    "2547": {
      "fn": "Sellable.sellContract",
      "jump": "i",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2548": {
      "fn": "Sellable.sellContract",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2549": {
      "fn": "Sellable.sellContract",
      "offset": [
        5609,
        5623
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x2"
    },
    "2551": {
      "fn": "Sellable.sellContract",
      "offset": [
        5602,
        5623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2552": {
      "fn": "Sellable.sellContract",
      "offset": [
        5602,
        5623
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "op": "SUB"
    },
    "2561": {
      "op": "NOT"
    },
    "2562": {
      "fn": "Sellable.sellContract",
      "offset": [
        5602,
        5623
      ],
      "op": "AND",
      "path": "1"
    },
    "2563": {
      "fn": "Sellable.sellContract",
      "offset": [
        5602,
        5623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2564": {
      "fn": "Sellable.sellContract",
      "offset": [
        5602,
        5623
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "fn": "Sellable.sellContract",
      "offset": [
        5633,
        5651
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 27
    },
    "2570": {
      "fn": "Sellable.sellContract",
      "offset": [
        5633,
        5651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2571": {
      "fn": "Sellable.sellContract",
      "offset": [
        5633,
        5651
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2572": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 28
    },
    "2573": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2578": {
      "op": "SHL"
    },
    "2579": {
      "op": "NOT"
    },
    "2580": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2581": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "AND",
      "path": "1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2586": {
      "op": "SHL"
    },
    "2587": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2588": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2589": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "DIV",
      "path": "1"
    },
    "2590": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2592": {
      "fn": "Sellable.sellContract",
      "offset": [
        5681,
        5688
      ],
      "op": "AND",
      "path": "1"
    },
    "2593": {
      "fn": "Sellable.sellContract",
      "offset": [
        5680,
        5688
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2594": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "MUL",
      "path": "1"
    },
    "2595": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2596": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2597": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "OR",
      "path": "1"
    },
    "2598": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2599": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2600": {
      "fn": "Sellable.sellContract",
      "offset": [
        5670,
        5688
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2601": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x40"
    },
    "2603": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2604": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "SUB"
    },
    "2613": {
      "op": "DUP1"
    },
    "2614": {
      "op": "DUP7"
    },
    "2615": {
      "op": "AND"
    },
    "2616": {
      "op": "DUP3"
    },
    "2617": {
      "op": "MSTORE"
    },
    "2618": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2619": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2620": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "AND",
      "path": "1"
    },
    "2621": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2622": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2623": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2624": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "AND",
      "path": "1"
    },
    "2625": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2626": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2627": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2628": {
      "fn": "Sellable.sellContract",
      "offset": [
        5815,
        5829
      ],
      "op": "OR",
      "path": "1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2631": {
      "op": "DUP4"
    },
    "2632": {
      "op": "ADD"
    },
    "2633": {
      "op": "MSTORE"
    },
    "2634": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xF25E5C775ABC4FDE8672E6C495F9A9F0FE279BC7640D95896B49DAD0FB4E6D68"
    },
    "2667": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "fn": "Sellable.sellContract",
      "offset": [
        5781,
        5830
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x820"
    },
    "2672": {
      "op": "JUMP"
    },
    "2673": {
      "fn": "Sellable.bidContract",
      "offset": [
        4224,
        5002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2674": {
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x0"
    },
    "2676": {
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2683": {
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "DIV",
      "path": "1"
    },
    "2684": {
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2686": {
      "branch": 57,
      "fn": "Sellable.bidContract",
      "offset": [
        4284,
        4291
      ],
      "op": "AND",
      "path": "1"
    },
    "2687": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADA"
    },
    "2690": {
      "branch": 57,
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2691": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2693": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2702": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2705": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2707": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2708": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "ADD",
      "path": "1"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2714": {
      "op": "DUP3"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "PUSH32",
      "value": "0x436F6E7472616374206973206E6F7420666F722073616C652061742074686520"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2752": {
      "op": "DUP3"
    },
    "2753": {
      "op": "ADD"
    },
    "2754": {
      "op": "MSTORE"
    },
    "2755": {
      "op": "PUSH7",
      "value": "0x36B7B6B2B73A17"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2768": {
      "op": "DUP3"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "MSTORE"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2777": {
      "op": "JUMP"
    },
    "2778": {
      "fn": "Sellable.bidContract",
      "offset": [
        4276,
        4335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2779": {
      "fn": "Sellable.bidContract",
      "offset": [
        4400,
        4410
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 31
    },
    "2780": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1D"
    },
    "2783": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2784": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2786": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2795": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2798": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2800": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2801": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "ADD",
      "path": "1"
    },
    "2802": {
      "op": "MSTORE"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2807": {
      "op": "DUP3"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "MSTORE"
    },
    "2810": {
      "op": "PUSH19",
      "value": "0x2A3C3710333937B690181030B2323932B9B997"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2835": {
      "op": "DUP3"
    },
    "2836": {
      "op": "ADD"
    },
    "2837": {
      "op": "MSTORE"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2840": {
      "op": "ADD"
    },
    "2841": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2844": {
      "op": "JUMP"
    },
    "2845": {
      "fn": "Sellable.bidContract",
      "offset": [
        4392,
        4448
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2846": {
      "fn": "Sellable.bidContract",
      "offset": [
        4480,
        4494
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x0"
    },
    "2848": {
      "fn": "Sellable.bidContract",
      "offset": [
        4480,
        4494
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "SUB"
    },
    "2857": {
      "fn": "Sellable.bidContract",
      "offset": [
        4480,
        4494
      ],
      "op": "AND",
      "path": "1"
    },
    "2858": {
      "fn": "Sellable.bidContract",
      "offset": [
        4466,
        4476
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2859": {
      "fn": "Sellable.bidContract",
      "offset": [
        4466,
        4494
      ],
      "op": "EQ",
      "path": "1"
    },
    "2860": {
      "branch": 58,
      "fn": "Sellable.bidContract",
      "offset": [
        4466,
        4494
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2861": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB78"
    },
    "2864": {
      "branch": 58,
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2865": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2867": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2876": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2879": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2881": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2882": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "ADD",
      "path": "1"
    },
    "2883": {
      "op": "MSTORE"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2888": {
      "op": "DUP3"
    },
    "2889": {
      "op": "ADD"
    },
    "2890": {
      "op": "MSTORE"
    },
    "2891": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F742062696420796F757220636F6E74726163742E000000"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "ADD"
    },
    "2928": {
      "op": "MSTORE"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2935": {
      "op": "JUMP"
    },
    "2936": {
      "fn": "Sellable.bidContract",
      "offset": [
        4458,
        4528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2937": {
      "fn": "Sellable.bidContract",
      "offset": [
        4558,
        4559
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x0"
    },
    "2939": {
      "fn": "Sellable.bidContract",
      "offset": [
        4546,
        4555
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2940": {
      "branch": 59,
      "fn": "Sellable.bidContract",
      "offset": [
        4546,
        4559
      ],
      "op": "GT",
      "path": "1"
    },
    "2941": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB5"
    },
    "2944": {
      "branch": 59,
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2945": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2947": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2954": {
      "op": "SHL"
    },
    "2955": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2956": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2959": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2961": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2962": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "ADD",
      "path": "1"
    },
    "2963": {
      "op": "MSTORE"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2968": {
      "op": "DUP3"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "op": "PUSH10",
      "value": "0x5072696365203C3D203"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2987": {
      "op": "DUP3"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "MSTORE"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2992": {
      "op": "ADD"
    },
    "2993": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "2996": {
      "op": "JUMP"
    },
    "2997": {
      "fn": "Sellable.bidContract",
      "offset": [
        4538,
        4574
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2998": {
      "fn": "Sellable.bidContract",
      "offset": [
        4605,
        4619
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x3"
    },
    "3000": {
      "fn": "Sellable.bidContract",
      "offset": [
        4605,
        4619
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3001": {
      "fn": "Sellable.bidContract",
      "offset": [
        4592,
        4601
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3002": {
      "fn": "Sellable.bidContract",
      "offset": [
        4592,
        4619
      ],
      "op": "LT",
      "path": "1"
    },
    "3003": {
      "branch": 60,
      "fn": "Sellable.bidContract",
      "offset": [
        4592,
        4619
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3004": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFF"
    },
    "3007": {
      "branch": 60,
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3008": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3010": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3019": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3022": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3024": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3025": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "ADD",
      "path": "1"
    },
    "3026": {
      "op": "MSTORE"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3031": {
      "op": "DUP3"
    },
    "3032": {
      "op": "ADD"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "PUSH21",
      "value": "0x2134B2101E1021B7B73A3930B1BA10383934B1B297"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "MSTORE"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "3070": {
      "op": "JUMP"
    },
    "3071": {
      "fn": "Sellable.bidContract",
      "offset": [
        4584,
        4645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3072": {
      "fn": "Sellable.bidContract",
      "offset": [
        4675,
        4686
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x1"
    },
    "3074": {
      "fn": "Sellable.bidContract",
      "offset": [
        4675,
        4686
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3075": {
      "fn": "Sellable.bidContract",
      "offset": [
        4663,
        4672
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3076": {
      "branch": 61,
      "fn": "Sellable.bidContract",
      "offset": [
        4663,
        4686
      ],
      "op": "GT",
      "path": "1"
    },
    "3077": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC63"
    },
    "3080": {
      "branch": 61,
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3081": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3083": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3084": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3092": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3095": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3097": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3098": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "ADD",
      "path": "1"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3104": {
      "op": "DUP3"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "op": "MSTORE"
    },
    "3107": {
      "op": "PUSH32",
      "value": "0x596F7572732069736E27742074686520686967686573742C2069742069732075"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3142": {
      "op": "DUP3"
    },
    "3143": {
      "op": "ADD"
    },
    "3144": {
      "op": "MSTORE"
    },
    "3145": {
      "op": "PUSH10",
      "value": "0x3730B1B1B2B83A32B217"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3161": {
      "op": "DUP3"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "op": "MSTORE"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "3170": {
      "op": "JUMP"
    },
    "3171": {
      "fn": "Sellable.bidContract",
      "offset": [
        4655,
        4733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3172": {
      "fn": "Sellable.bidContract",
      "offset": [
        4763,
        4764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3174": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3176": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4760
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3177": {
      "branch": 62,
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4764
      ],
      "op": "GT",
      "path": "1"
    },
    "3178": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3179": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4796
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3180": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7F"
    },
    "3183": {
      "branch": 62,
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3184": {
      "op": "POP"
    },
    "3185": {
      "fn": "Sellable.bidContract",
      "offset": [
        4768,
        4782
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3187": {
      "fn": "Sellable.bidContract",
      "offset": [
        4768,
        4782
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "op": "SUB"
    },
    "3196": {
      "fn": "Sellable.bidContract",
      "offset": [
        4768,
        4782
      ],
      "op": "AND",
      "path": "1"
    },
    "3197": {
      "fn": "Sellable.bidContract",
      "offset": [
        4768,
        4796
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3198": {
      "branch": 63,
      "fn": "Sellable.bidContract",
      "offset": [
        4768,
        4796
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3199": {
      "fn": "Sellable.bidContract",
      "offset": [
        4749,
        4796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3200": {
      "fn": "Sellable.bidContract",
      "offset": [
        4745,
        4855
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3201": {
      "fn": "Sellable.bidContract",
      "offset": [
        4745,
        4855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC2"
    },
    "3204": {
      "branch": 63,
      "fn": "Sellable.bidContract",
      "offset": [
        4745,
        4855
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3205": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x2"
    },
    "3207": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3208": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3210": {
      "fn": "Sellable.bidContract",
      "offset": [
        4843,
        4854
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3211": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3213": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "op": "SUB"
    },
    "3222": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3223": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3224": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "AND",
      "path": "1"
    },
    "3225": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3226": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3227": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3228": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "3231": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "MUL",
      "path": "1"
    },
    "3232": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3233": {
      "fn": "Sellable.bidContract",
      "offset": [
        4843,
        4854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3234": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3236": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3237": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3238": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3239": {
      "fn": "Sellable.bidContract",
      "offset": [
        4843,
        4854
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3240": {
      "fn": "Sellable.bidContract",
      "offset": [
        4818,
        4832
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3241": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3242": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "CALL",
      "path": "1"
    },
    "3243": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3244": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "POP",
      "path": "1"
    },
    "3245": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "POP",
      "path": "1"
    },
    "3246": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "POP",
      "path": "1"
    },
    "3247": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "POP",
      "path": "1"
    },
    "3248": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3249": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3250": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3251": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC0"
    },
    "3254": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3255": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3256": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3258": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3259": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3260": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3261": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3263": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3264": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3265": {
      "fn": "Sellable.bidContract",
      "offset": [
        4810,
        4855
      ],
      "op": "POP",
      "path": "1"
    },
    "3266": {
      "fn": "Sellable.bidContract",
      "offset": [
        4745,
        4855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3267": {
      "fn": "Sellable.bidContract",
      "offset": [
        4877,
        4891
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 37,
      "value": "0x2"
    },
    "3269": {
      "fn": "Sellable.bidContract",
      "offset": [
        4870,
        4891
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3270": {
      "fn": "Sellable.bidContract",
      "offset": [
        4870,
        4891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3271": {
      "fn": "Sellable.bidContract",
      "offset": [
        4949,
        4958
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 38
    },
    "3272": {
      "fn": "Sellable.bidContract",
      "offset": [
        4870,
        4891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3274": {
      "fn": "Sellable.bidContract",
      "offset": [
        4935,
        4958
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "op": "NOT"
    },
    "3284": {
      "fn": "Sellable.bidContract",
      "offset": [
        4870,
        4891
      ],
      "op": "AND",
      "path": "1"
    },
    "3285": {
      "fn": "Sellable.bidContract",
      "offset": [
        4985,
        4995
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 39
    },
    "3286": {
      "fn": "Sellable.bidContract",
      "offset": [
        4968,
        4995
      ],
      "op": "OR",
      "path": "1"
    },
    "3287": {
      "fn": "Sellable.bidContract",
      "offset": [
        4968,
        4995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3288": {
      "fn": "Sellable.bidContract",
      "offset": [
        4968,
        4995
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3289": {
      "fn": "Sellable.bidContract",
      "jump": "o",
      "offset": [
        4224,
        5002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3290": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3291": {
      "offset": [
        619,
        633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3293": {
      "fn": "Sellable.revokeSale",
      "offset": [
        619,
        633
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "offset": [
        619,
        633
      ],
      "op": "AND",
      "path": "2"
    },
    "3303": {
      "offset": [
        605,
        615
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3304": {
      "offset": [
        605,
        633
      ],
      "op": "EQ",
      "path": "2"
    },
    "3305": {
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD04"
    },
    "3308": {
      "offset": [
        597,
        644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3309": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3311": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "offset": [
        597,
        644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3320": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3321": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3323": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "ADD",
      "path": "2"
    },
    "3324": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "3327": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3328": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "3331": {
      "fn": "Sellable.revokeSale",
      "jump": "i",
      "offset": [
        597,
        644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3332": {
      "fn": "Sellable.revokeSale",
      "offset": [
        597,
        644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3333": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 40,
      "value": "0x0"
    },
    "3335": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3342": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "DIV",
      "path": "1"
    },
    "3343": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3345": {
      "branch": 64,
      "fn": "Sellable.revokeSale",
      "offset": [
        6000,
        6007
      ],
      "op": "AND",
      "path": "1"
    },
    "3346": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD55"
    },
    "3349": {
      "branch": 64,
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3350": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3352": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3361": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3364": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3366": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3367": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "ADD",
      "path": "1"
    },
    "3368": {
      "op": "MSTORE"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3373": {
      "op": "DUP3"
    },
    "3374": {
      "op": "ADD"
    },
    "3375": {
      "op": "MSTORE"
    },
    "3376": {
      "op": "PUSH21",
      "value": "0x21B7B73A3930B1BA103737BA1037B71039B0B63297"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3403": {
      "op": "DUP3"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "3412": {
      "op": "JUMP"
    },
    "3413": {
      "fn": "Sellable.revokeSale",
      "offset": [
        5992,
        6033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3414": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0x0"
    },
    "3416": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3417": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "op": "NOT"
    },
    "3424": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3425": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "AND",
      "path": "1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3432": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3433": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3434": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "DIV",
      "path": "1"
    },
    "3435": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3437": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6054,
        6061
      ],
      "op": "AND",
      "path": "1"
    },
    "3438": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6053,
        6061
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3439": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3440": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3441": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "MUL",
      "path": "1"
    },
    "3442": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "OR",
      "path": "1"
    },
    "3443": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3444": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6043,
        6061
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3447": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6087
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3448": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6091
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3449": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3450": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6091
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3451": {
      "branch": 65,
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6091
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3452": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8F"
    },
    "3455": {
      "branch": 65,
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6095,
        6109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3459": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6095,
        6109
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6095,
        6109
      ],
      "op": "AND",
      "path": "1"
    },
    "3469": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6095,
        6123
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3470": {
      "branch": 66,
      "fn": "Sellable.revokeSale",
      "offset": [
        6095,
        6123
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3471": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6076,
        6123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3472": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6072,
        6182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3473": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6072,
        6182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD2"
    },
    "3476": {
      "branch": 66,
      "fn": "Sellable.revokeSale",
      "offset": [
        6072,
        6182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3477": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 42,
      "value": "0x2"
    },
    "3479": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3480": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3482": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6170,
        6181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3483": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3485": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3492": {
      "op": "SHL"
    },
    "3493": {
      "op": "SUB"
    },
    "3494": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3495": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3496": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "AND",
      "path": "1"
    },
    "3497": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3498": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3499": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3500": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "3503": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "MUL",
      "path": "1"
    },
    "3504": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3505": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6170,
        6181
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3506": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3508": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3509": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3510": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3511": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6170,
        6181
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3512": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6145,
        6159
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3513": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3514": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "CALL",
      "path": "1"
    },
    "3515": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3516": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "POP",
      "path": "1"
    },
    "3517": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "POP",
      "path": "1"
    },
    "3518": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "POP",
      "path": "1"
    },
    "3519": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "POP",
      "path": "1"
    },
    "3520": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3521": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3522": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3523": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD0"
    },
    "3526": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3527": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3528": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3530": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3531": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3532": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3533": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3535": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3536": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3537": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6137,
        6182
      ],
      "op": "POP",
      "path": "1"
    },
    "3538": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6072,
        6182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3539": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6200,
        6214
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 43,
      "value": "0x2"
    },
    "3541": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3542": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3549": {
      "op": "SHL"
    },
    "3550": {
      "op": "SUB"
    },
    "3551": {
      "op": "NOT"
    },
    "3552": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "AND",
      "path": "1"
    },
    "3553": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3554": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3555": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6200,
        6214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3557": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6193,
        6214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3559": {
      "fn": "Sellable.revokeSale",
      "offset": [
        6224,
        6242
      ],
      "op": "SSTORE",
      "path": "1",
      "statement": 44
    },
    "3560": {
      "fn": "Sellable.revokeSale",
      "jump": "o",
      "offset": [
        5941,
        6249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3561": {
      "op": "JUMPDEST"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3566": {
      "op": "DUP3"
    },
    "3567": {
      "op": "DUP5"
    },
    "3568": {
      "op": "SUB"
    },
    "3569": {
      "op": "SLT"
    },
    "3570": {
      "op": "ISZERO"
    },
    "3571": {
      "op": "PUSH2",
      "value": "0xDFB"
    },
    "3574": {
      "op": "JUMPI"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3577": {
      "op": "DUP1"
    },
    "3578": {
      "op": "REVERT"
    },
    "3579": {
      "op": "JUMPDEST"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "op": "CALLDATALOAD"
    },
    "3582": {
      "op": "SWAP2"
    },
    "3583": {
      "op": "SWAP1"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "jump": "o",
      "op": "JUMP"
    },
    "3586": {
      "op": "JUMPDEST"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3593": {
      "op": "SHL"
    },
    "3594": {
      "op": "SUB"
    },
    "3595": {
      "op": "DUP2"
    },
    "3596": {
      "op": "AND"
    },
    "3597": {
      "op": "DUP2"
    },
    "3598": {
      "op": "EQ"
    },
    "3599": {
      "op": "PUSH2",
      "value": "0xE17"
    },
    "3602": {
      "op": "JUMPI"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3605": {
      "op": "DUP1"
    },
    "3606": {
      "op": "REVERT"
    },
    "3607": {
      "op": "JUMPDEST"
    },
    "3608": {
      "op": "POP"
    },
    "3609": {
      "jump": "o",
      "op": "JUMP"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3615": {
      "op": "DUP3"
    },
    "3616": {
      "op": "DUP5"
    },
    "3617": {
      "op": "SUB"
    },
    "3618": {
      "op": "SLT"
    },
    "3619": {
      "op": "ISZERO"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3623": {
      "op": "JUMPI"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3626": {
      "op": "DUP1"
    },
    "3627": {
      "op": "REVERT"
    },
    "3628": {
      "op": "JUMPDEST"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "CALLDATALOAD"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xE37"
    },
    "3634": {
      "op": "DUP2"
    },
    "3635": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3638": {
      "jump": "i",
      "op": "JUMP"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "SWAP4"
    },
    "3641": {
      "op": "SWAP3"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "jump": "o",
      "op": "JUMP"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3649": {
      "op": "DUP1"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3652": {
      "op": "DUP4"
    },
    "3653": {
      "op": "DUP6"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "op": "SLT"
    },
    "3656": {
      "op": "ISZERO"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xE51"
    },
    "3660": {
      "op": "JUMPI"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3663": {
      "op": "DUP1"
    },
    "3664": {
      "op": "REVERT"
    },
    "3665": {
      "op": "JUMPDEST"
    },
    "3666": {
      "op": "DUP3"
    },
    "3667": {
      "op": "CALLDATALOAD"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3671": {
      "op": "DUP2"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3675": {
      "jump": "i",
      "op": "JUMP"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "SWAP5"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3680": {
      "op": "SWAP4"
    },
    "3681": {
      "op": "SWAP1"
    },
    "3682": {
      "op": "SWAP4"
    },
    "3683": {
      "op": "ADD"
    },
    "3684": {
      "op": "CALLDATALOAD"
    },
    "3685": {
      "op": "SWAP4"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "jump": "o",
      "op": "JUMP"
    },
    "3690": {
      "op": "JUMPDEST"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3693": {
      "op": "DUP1"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "MSTORE"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3698": {
      "op": "SWAP1"
    },
    "3699": {
      "op": "DUP3"
    },
    "3700": {
      "op": "ADD"
    },
    "3701": {
      "op": "MSTORE"
    },
    "3702": {
      "op": "PUSH6",
      "value": "0x10A7BBB732B9"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3711": {
      "op": "SHL"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3714": {
      "op": "DUP3"
    },
    "3715": {
      "op": "ADD"
    },
    "3716": {
      "op": "MSTORE"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3719": {
      "op": "ADD"
    },
    "3720": {
      "op": "SWAP1"
    },
    "3721": {
      "jump": "o",
      "op": "JUMP"
    },
    "3722": {
      "op": "JUMPDEST"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3727": {
      "op": "DUP3"
    },
    "3728": {
      "op": "DUP5"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "op": "SLT"
    },
    "3731": {
      "op": "ISZERO"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3735": {
      "op": "JUMPI"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "op": "DUP1"
    },
    "3739": {
      "op": "REVERT"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "DUP2"
    },
    "3742": {
      "op": "MLOAD"
    },
    "3743": {
      "op": "DUP1"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "EQ"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xE37"
    },
    "3751": {
      "op": "JUMPI"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "op": "DUP1"
    },
    "3755": {
      "op": "REVERT"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3761": {
      "op": "DUP3"
    },
    "3762": {
      "op": "DUP5"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "op": "SLT"
    },
    "3765": {
      "op": "ISZERO"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "JUMPI"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "REVERT"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "op": "MLOAD"
    },
    "3777": {
      "op": "SWAP2"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "jump": "o",
      "op": "JUMP"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3784": {
      "op": "DUP3"
    },
    "3785": {
      "op": "NOT"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "GT"
    },
    "3788": {
      "op": "ISZERO"
    },
    "3789": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "3792": {
      "op": "JUMPI"
    },
    "3793": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3800": {
      "op": "SHL"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3808": {
      "op": "MSTORE"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "REVERT"
    },
    "3814": {
      "op": "JUMPDEST"
    },
    "3815": {
      "op": "POP"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "479621260d365b82696e48ca6268c02e1e0529d4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\nimport \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol\";\nimport \"./Deps/Owned.sol\";\n\n\n/*\n* @title: Sellable smart contract, funded with tokens.\n* @author: Anthony (fps) https://github.com/fps8k .\n* @dev: \n* This smart contract involves an contract_owner depositing tokens into the smart contract, then he can list the smart contract for sale.\n* The buyer then purchases the smart contract and can take the tokens in the smart contract.\n*\n* O W N   C O N T R A C T .\n* D E P O S I T   T O K E N S   I N   T H E   C O N T R A C T .\n* L I S T   T H E   C O N T R A C T   F O R   S A L E.\n* B U Y   C O N T R A C T   A N D   B E C O M E   O W N E R.\n* W I T H D R A W   T O K E N S.\n*/\n\ncontract Sellable is Owned\n{\n    // isOwner from Owned.\n\n\n    // Toggle for the sale and non-sale of the contract.\n\n    bool private on_sale = false;\n\n\n    // The highest bid, highest bidder.\n\n    uint256 private highest_bid;\n    address private highest_bidder;\n\n    uint256 private contract_price;\n    uint256 private stored_contract_tokens;\n\n    IERC20 token;\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Checks if the token to be stored in the contract passes 2 tests:\n    *\n    * -> The current token must be none.\n    * -> The new token to be added must be the same with the existing token.\n    *\n    * Returns true if one of the conditions is met.\n    * \n    *\n    * @param:\n    *\n    * IERC20 __token.\n    * \n    *\n    * @return:\n    * \n    * bool.\n    */\n\n    function canDeposit(IERC20 __token) public view returns(bool)\n    {\n        bool is_empty = (address(token) == address(0));\n        bool is_same_token = (token == IERC20(__token));\n        \n        return (is_empty || is_same_token);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Allows the `contract_owner` of the contract to deposit some of his tokens into the contract.\n    * Only the `contract_owner` of the contract can deposit tokens.\n    *\n    * The `contract_owner` must have some allowance given to himself on the tokens he wants to deposit.\n    * The contract must not be on sale for this function to be called.\n    *\n    * There cannot be two different tokens in the account.\n    * \n    *\n    * @param:\n    *\n    * address __token, uint256 _amount.\n    */\n\n    function depositTokens(address _token, uint256 _amount) public isOwner\n    {\n        require(!on_sale, \"Contract is on sale\");\n        require(_token != address(0), \"Zero token address\");\n        require(canDeposit(IERC20(_token)), \"You cannot have 2 different tokens in this contract, Withdraw existing tokens.\");\n\n        token = IERC20(_token);\n\n\n        // Token holder will give contract some allowance.\n\n        require(token.allowance(msg.sender, address(this)) >= _amount, \"You don't have enough allowance tokens.\");\n        token.transferFrom(msg.sender, address(this), _amount);\n\n        stored_contract_tokens += _amount;\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * The contract must not be on sale for this function to be called.\n    * This allows the contract_owner to place a price on his contract.\n    * The maximum allowed for contract sale is 8 ether.\n    * Turns on `on_sale` to true.\n    *\n    * The contract must have a minimum of tokens before it can be listed for sale, say 100.\n    * \n    *\n    * @param:\n    *\n    * uint256 _amount.\n    */\n\n    function placeOnSaleInGwei(uint256 _amount) public isOwner\n    {\n        require(!on_sale, \"Contract is for sale at the moment.\");                           // Req on_sale == False;\n        require(stored_contract_tokens >= 50, \"There must be a minimum of 100 tokens to list contract on sale.\");\n        require(_amount <= 8 ether, \"Amount must be <= 8 ether.\");\n        on_sale = !on_sale;\n        contract_price = _amount;\n    }\n\n\n\n\n    /*\n    * @dev:\n    * \n    * Allows anyone to bid as long as their bid >= contract price and > highest bid standing set in the placeOnSaleInGwei.\n    * The contract must be on sale.\n    * Bidder cannnot be a 0 address.\n    * Msg.value must be >= contract price and > highest_bid.\n    *\n    * This pays back the amount the old highest bidder had.\n    * New highest bidder and new highest bid replaces the old spots.\n    */\n\n    function bidContract() public payable\n    {\n        require(on_sale, \"Contract is not for sale at the moment.\");                        // Req on_sale == True;\n        require(msg.sender != address(0), \"Txn from 0 address.\");\n        require(msg.sender != contract_owner, \"You cannot bid your contract.\");\n        require(msg.value > 0, \"Price <= 0\");\n        require(msg.value >= contract_price, \"Bid < Contract price.\");\n        require(msg.value > highest_bid, \"Yours isn't the highest, it is unaccepted.\");\n\n\n        if (highest_bid > 0 && highest_bidder != address(0))\n            payable(highest_bidder).transfer(highest_bid);\n\n            delete highest_bidder;\n            delete highest_bid;\n\n\n        highest_bid = msg.value;\n        highest_bidder = msg.sender;\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Sells the contract to the highest bidder.\n    * Makes the highest bidder the contract_owner.\n    * Sets the on sale to false.\n    */\n\n    function sellContract() public isOwner\n    {\n        require(on_sale, \"Not on sale\");                                            // Req on_sale == True;\n        require(highest_bid > 0, \"No bids yet.\");\n        require(highest_bidder != address(0), \"No bidder yet.\");\n\n        address old_contract_owner = contract_owner;\n\n        payable(contract_owner).transfer(highest_bid);\n        moveOwnership(highest_bidder);\n\n        delete highest_bidder;\n        delete highest_bid;\n        \n        on_sale = !on_sale;                                                         // on_sale == False;\n\n        emit MoveOwnership(old_contract_owner, contract_owner);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Cancels the sale and repays the current highest bidder.\n    */\n\n    function revokeSale() public isOwner\n    {\n        require(on_sale, \"Contract not on sale.\");\n        on_sale = !on_sale;\n\n        if (highest_bid > 0 && highest_bidder != address(0))\n            payable(highest_bidder).transfer(highest_bid);\n\n        delete highest_bidder;\n        delete highest_bid;\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Allows the token owner to withdraw the tokens he has put in the contract.\n    * OR\n    * Allows the token owner to withdraw the tokens stored in the contrat after purchase.\n    */\n\n    function withdrawTokens() public isOwner\n    {\n        require(!on_sale, \"Contract is on sale.\");\n        require(stored_contract_tokens > 0, \"This contract has no stored tokens\");\n\n        token.transfer(msg.sender, stored_contract_tokens);\n\n        delete token;\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Owner of contract wants to destroy tokens available.\n    * Transfers tokens to the owner and deletes token.\n    */\n\n    function destructTokens() public isOwner\n    {\n        require(!on_sale, \"Contract on sale\");\n        require(stored_contract_tokens > 0, \"This contract has no stored tokens\");\n        \n        token.transfer(msg.sender, stored_contract_tokens);\n\n        delete token;\n    }\n}",
  "sourceMap": "768:6404:1:-:0;;;911:5;888:28;;-1:-1:-1;;;;888:28:1;;;768:6404;;;;;;;;;-1:-1:-1;377:14:2;:27;;-1:-1:-1;;;;;;377:27:2;394:10;377:27;;;;;421:37;;;226:34:4;;;291:2;276:18;;269:43;;;;421:37:2;;161:18:4;421:37:2;;;;;;;768:6404:1;;;;;;",
  "sourcePath": "contracts/Covered.sol",
  "type": "contract"
}